{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\praka\\\\Desktop\\\\deploy\\\\master-admin-Appzo\\\\src\\\\Components\\\\ImageCrop.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { useHistory } from \"react-router-dom\";\nimport 'react-image-crop/dist/ReactCrop.css';\nimport ReactCrop from 'react-image-crop';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styless = makeStyles(theme => ({\n  root: {\n    background: '#4caf50'\n  }\n})); // Code for Image crop \n\nfunction generateDownload(canvas, crop) {\n  if (!crop || !canvas) {\n    return;\n  }\n\n  canvas.toBlob(blob => {\n    const previewUrl = window.URL.createObjectURL(blob);\n    const anchor = document.createElement('a');\n    anchor.download = 'cropPreview.png';\n    anchor.href = URL.createObjectURL(blob);\n    anchor.click();\n    window.URL.revokeObjectURL(previewUrl);\n  }, 'image/png', 1);\n} // End of Image crop \n\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.root,\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nexport default function CustomizedDialogs(props) {\n  _s();\n\n  var _completedCrop$width, _completedCrop$height;\n\n  // More Code for Image Crop \n  const [upImg, setUpImg] = useState();\n  const imgRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n  const [crop, setCrop] = useState({\n    unit: '%',\n    width: 30,\n    aspect: 16 / 9\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n  const classes = styless();\n\n  const onSelectFile = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => setUpImg(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  const onLoad = useCallback(img => {\n    imgRef.current = img;\n  }, []);\n  useEffect(() => {\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\n      return;\n    }\n\n    const image = imgRef.current;\n    const canvas = previewCanvasRef.current;\n    const crop = completedCrop;\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    const ctx = canvas.getContext('2d');\n    const pixelRatio = window.devicePixelRatio;\n    canvas.width = crop.width * pixelRatio;\n    canvas.height = crop.height * pixelRatio;\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = 'high';\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n  }, [completedCrop]); // End of Crop Image code \n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const file = new File([\"foo\"], \"\", {\n    type: \"text/plain\"\n  });\n  const [selectedFile, setSelectedFile] = useState();\n  const [isFilePicked, setIsFilePicked] = useState(false);\n\n  const changeHandler = event => {\n    setSelectedFile(event.target.files[0]); //setIsSelected(true);\n  };\n\n  const [fileList, setFileList] = useState();\n  useEffect(() => {\n    console.log(fileList);\n  });\n\n  const onDropzoneAreaChange = (files, e) => {\n    setFileList(files); //console.log(fileList);\n    //console.log(\"Files:\", files);\n    //   if (!e.target.files[0].name.match(/.(jpg|jpeg|png|gif)$/i)){\n    //     alert('not an image');\n    // }\n  };\n\n  const history = useHistory();\n  const [filename, setFileName] = useState([]);\n  const [filesNa, setFilesNa] = useState([]);\n  const [modelImg, setModelImg] = useState('');\n\n  const handleChange = e => {\n    if (!e.target.files[0].name.match(/.(pdf|docx)$/i)) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => setFileName(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n      setFileName(e.target.files[0].name);\n    } else {\n      setFilesNa(handleClicks); // Code for Alert message show below \n\n      setFilesNa(e.target.files[0].name);\n    }\n  }; // Code for Snackbar \n\n\n  const [opens, setOpens] = React.useState(false);\n\n  const handleClicks = () => {\n    setOpens(true);\n  };\n\n  const handleCloses = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpens(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickOpen,\n      variant: \"contained\",\n      style: {\n        background: \"#2121a5\",\n        color: \"white\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(PublishIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 105\n      }, this), \"Choose Photo\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        onClose: handleClose,\n        \"aria-labelledby\": \"customized-dialog-title\",\n        open: open,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"customized-dialog-title\",\n          onClose: handleClose,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", filename != '' ? /*#__PURE__*/_jsxDEV(Typography, {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \" Image Crop \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 32\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \" File Upload \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 91\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 79\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          dividers: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"File\",\n              style: {\n                width: \"300px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                align: \"center\",\n                mt: 2,\n                children: filename != '' ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 33\n                }, this) : /*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                  color: \"disabled\",\n                  fontSiz: \"large\",\n                  style: {\n                    width: 40,\n                    height: 40\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 43\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 15\n              }, this), filename != '' ? /*#__PURE__*/_jsxDEV(Typography, {\n                align: \"center\",\n                children: \"Click and drag for cropping\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                align: \"center\",\n                children: filesNa != '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(Alert, {\n                    children: filesNa\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 151\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 148\n                }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"No File Selected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 183\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 103\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Image\",\n              style: {\n                marginTop: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                children: [/*#__PURE__*/_jsxDEV(ReactCrop, {\n                  src: filename,\n                  onImageLoaded: onLoad,\n                  crop: crop,\n                  onChange: c => setCrop(c),\n                  onComplete: c => setCompletedCrop(c),\n                  style: {\n                    height: \"120px\",\n                    width: \"200px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                    ref: previewCanvasRef // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\n                    ,\n                    style: {\n                      width: Math.round((_completedCrop$width = completedCrop === null || completedCrop === void 0 ? void 0 : completedCrop.width) !== null && _completedCrop$width !== void 0 ? _completedCrop$width : 0),\n                      height: Math.round((_completedCrop$height = completedCrop === null || completedCrop === void 0 ? void 0 : completedCrop.height) !== null && _completedCrop$height !== void 0 ? _completedCrop$height : 0)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 16\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 13\n            }, this), filename != '' ? /*#__PURE__*/_jsxDEV(Box, {\n              align: \"center\",\n              mt: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                size: \"small\",\n                variant: \"contained\",\n                color: \"secondary\",\n                disabled: !(completedCrop === null || completedCrop === void 0 ? void 0 : completedCrop.width) || !(completedCrop === null || completedCrop === void 0 ? void 0 : completedCrop.height),\n                onClick: () => generateDownload(previewCanvasRef.current, completedCrop),\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 13\n            }, this) : /*#__PURE__*/_jsxDEV(Box, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                style: {\n                  color: \"green\"\n                },\n                size: \"small\",\n                component: \"label\",\n                style: {\n                  marginTop: \"10px\"\n                },\n                children: [\"Choose File\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \".png, .jpg, .jpeg, .pdf,.docx\",\n                  hidden: true,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 18\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            autoFocus: true,\n            onClick: handleClose,\n            style: {\n              color: \"green\"\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: opens,\n      autoHideDuration: 6000,\n      onClose: handleCloses,\n      message: \"File Uploaded Successfully\",\n      ContentProps: {\n        classes: {\n          root: classes.root\n        }\n      },\n      action: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: handleCloses,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomizedDialogs, \"9FJpFos6HLmFoKOoJQD+CHFk3GA=\", false, function () {\n  return [useHistory];\n});\n\n_c = CustomizedDialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedDialogs\");","map":{"version":3,"sources":["C:/Users/praka/Desktop/deploy/master-admin-Appzo/src/Components/ImageCrop.js"],"names":["React","withStyles","Button","Alert","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Box","Typography","PublishIcon","useState","useEffect","useCallback","useRef","CloudUploadIcon","useHistory","ReactCrop","Snackbar","makeStyles","styless","theme","root","background","generateDownload","canvas","crop","toBlob","blob","previewUrl","window","URL","createObjectURL","anchor","document","createElement","download","href","click","revokeObjectURL","styles","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","CustomizedDialogs","upImg","setUpImg","imgRef","previewCanvasRef","setCrop","unit","width","aspect","completedCrop","setCompletedCrop","onSelectFile","e","target","files","length","reader","FileReader","addEventListener","result","readAsDataURL","onLoad","img","current","image","scaleX","naturalWidth","scaleY","naturalHeight","height","ctx","getContext","pixelRatio","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","open","setOpen","handleClickOpen","handleClose","file","File","type","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","changeHandler","event","fileList","setFileList","console","log","onDropzoneAreaChange","history","filename","setFileName","filesNa","setFilesNa","modelImg","setModelImg","handleChange","name","match","handleClicks","opens","setOpens","handleCloses","reason","marginTop","c","Math","round","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\n \r\nimport {useState,useEffect,useCallback, useRef} from 'react';\r\n \r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n \r\nimport { useHistory } from \"react-router-dom\";\r\n \r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport ReactCrop from 'react-image-crop';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n \r\nconst styless = makeStyles((theme) => ({\r\n  root: {\r\n    background: '#4caf50'\r\n  }\r\n}));\r\n// Code for Image crop \r\n \r\nfunction generateDownload(canvas, crop) {\r\n  if (!crop || !canvas) {\r\n    return;\r\n  }\r\n \r\n  canvas.toBlob(\r\n    (blob) => {\r\n      const previewUrl = window.URL.createObjectURL(blob);\r\n \r\n      const anchor = document.createElement('a');\r\n      anchor.download = 'cropPreview.png';\r\n      anchor.href = URL.createObjectURL(blob);\r\n      anchor.click();\r\n \r\n      window.URL.revokeObjectURL(previewUrl);\r\n    },\r\n    'image/png',\r\n    1\r\n  );\r\n}\r\n \r\n// End of Image crop \r\n \r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n \r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n \r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n \r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n \r\nexport default function CustomizedDialogs(props) {\r\n \r\n  // More Code for Image Crop \r\n  const [upImg, setUpImg] = useState();\r\n  const imgRef = useRef(null);\r\n  const previewCanvasRef = useRef(null);\r\n  const [crop, setCrop] = useState({ unit: '%', width: 30, aspect: 16 / 9 });\r\n  const [completedCrop, setCompletedCrop] = useState(null);\r\n \r\n \r\n  const classes = styless();\r\n   \r\n \r\n  const onSelectFile = (e) => {\r\n \r\n \r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () => setUpImg(reader.result));\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n \r\n  const onLoad = useCallback((img) => {\r\n    imgRef.current = img;\r\n  }, []);\r\n \r\n  useEffect(() => {\r\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\r\n      return;\r\n    }\r\n \r\n    const image = imgRef.current;\r\n    const canvas = previewCanvasRef.current;\r\n    const crop = completedCrop;\r\n \r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext('2d');\r\n    const pixelRatio = window.devicePixelRatio;\r\n \r\n    canvas.width = crop.width * pixelRatio;\r\n    canvas.height = crop.height * pixelRatio;\r\n \r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n \r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n  }, [completedCrop]);\r\n   \r\n  // End of Crop Image code \r\n \r\n  const [open, setOpen] = React.useState(false);\r\n \r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n \r\n  const file = new File([\"foo\"], \"\", {\r\n    type: \"text/plain\",\r\n  });\r\n \r\n  const [selectedFile, setSelectedFile] = useState();\r\n    const [isFilePicked, setIsFilePicked] = useState(false);\r\n \r\n  const changeHandler = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n        //setIsSelected(true);\r\n    };\r\n    \r\n \r\n  const [fileList, setFileList] = useState();\r\n \r\n  useEffect(() => {\r\n    console.log(fileList);\r\n  });\r\n \r\n  const onDropzoneAreaChange = (files,e) => {\r\n   \r\n    setFileList(files);\r\n    //console.log(fileList);\r\n    //console.log(\"Files:\", files);\r\n \r\n  //   if (!e.target.files[0].name.match(/.(jpg|jpeg|png|gif)$/i)){\r\n  //     alert('not an image');\r\n  // }\r\n  }; \r\n \r\n  const history = useHistory();\r\n  const[filename,setFileName]= useState([]);\r\n  const[filesNa,setFilesNa]= useState([]);\r\n  const[modelImg,setModelImg] = useState('');\r\n \r\n  const handleChange = (e) =>\r\n  {\r\n      if(!e.target.files[0].name.match(/.(pdf|docx)$/i))\r\n      { \r\n          const reader = new FileReader();\r\n          reader.addEventListener('load', () => setFileName(reader.result));\r\n          reader.readAsDataURL(e.target.files[0]);\r\n          setFileName(e.target.files[0].name)\r\n          }\r\n        else\r\n        {\r\n          setFilesNa(handleClicks) // Code for Alert message show below \r\n          setFilesNa(e.target.files[0].name)\r\n        }\r\n  }\r\n   \r\n   // Code for Snackbar \r\n \r\n   const [opens, setOpens] = React.useState(false);\r\n \r\n   const handleClicks = () => {\r\n     setOpens(true);\r\n   };\r\n  \r\n   const handleCloses = (event, reason) => {\r\n     if (reason === 'clickaway') {\r\n       return;\r\n     }\r\n  \r\n     setOpens(false);\r\n   };\r\n  return (\r\n    <div>\r\n\r\n    <Button onClick={handleClickOpen} variant=\"contained\" style={{background:\"#2121a5\",color:\"white\"}} ><PublishIcon/>Choose Photo</Button>\r\n      <div>  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n       <div> {filename != '' ? <Typography><b> Image Crop </b></Typography> : <Typography><b> File Upload </b></Typography> } </div>\r\n      </DialogTitle>\r\n        \r\n          <DialogContent dividers>\r\n            <Box >\r\n            <div className=\"File\" style={{width:\"300px\"}}>\r\n              <Box align=\"center\" mt={2}>\r\n                 \r\n              {filename != '' ? <p></p> : <CloudUploadIcon color=\"disabled\" fontSiz=\"large\"  style={{width:40, height:40,}}/>  }</Box >\r\n \r\n              {filename != '' ? <Typography align=\"center\">Click and drag for cropping</Typography> : <Typography align=\"center\">{ filesNa != '' ? <p><Alert>{filesNa}</Alert> </p> : <h4>No File Selected</h4>}</Typography>  }\r\n                        \r\n            </div>\r\n  \r\n            <div className=\"Image\" style={{marginTop:\"10px\"}}>\r\n             <form>\r\n              <ReactCrop\r\n                src={filename}\r\n                onImageLoaded={onLoad}\r\n                crop={crop}\r\n                onChange={(c) => setCrop(c)}\r\n                onComplete={(c) => setCompletedCrop(c)}\r\n                style={{height:\"120px\",width:\"200px\"}}\r\n              />\r\n               <div>\r\n                <canvas\r\n                  ref={previewCanvasRef}\r\n                  // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\r\n                  style={{\r\n                    width: Math.round(completedCrop?.width ?? 0),\r\n                    height: Math.round(completedCrop?.height ?? 0)\r\n                  }}\r\n                />\r\n             </div>\r\n             \r\n              </form>\r\n            </div>  \r\n            {filename != '' ?\r\n             \r\n            <Box align=\"center\" mt={2}><Button type=\"button\" size=\"small\"  variant=\"contained\" color=\"secondary\"  disabled={!completedCrop?.width || !completedCrop?.height}onClick={() =>generateDownload(previewCanvasRef.current, completedCrop)}>Download</Button></Box>\r\n             \r\n              : <Box align=\"center\">\r\n                 <Button variant=\"contained\" style={{color:\"green\"}} size=\"small\" component=\"label\" style={{marginTop:\"10px\"}}>\r\n                   Choose File\r\n                 <input  type=\"file\" accept=\".png, .jpg, .jpeg, .pdf,.docx\"  hidden onChange={handleChange}/>\r\n                 </Button>   \r\n               </Box>\r\n                }\r\n              </Box>\r\n             \r\n        </DialogContent>\r\n      <DialogActions>\r\n        <Button autoFocus onClick={handleClose} style={{color:\"green\"}}>\r\n         Submit\r\n        </Button>\r\n        \r\n      </DialogActions>\r\n    </Dialog>\r\n    </div>\r\n    <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        \r\n        open={opens}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloses}\r\n        message=\"File Uploaded Successfully\"\r\n        ContentProps={{\r\n          classes: {\r\n            root: classes.root\r\n          }\r\n        }}\r\n        action={\r\n          <React.Fragment>\r\n            \r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloses}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}