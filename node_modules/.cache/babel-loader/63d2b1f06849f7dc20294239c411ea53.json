{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\praka\\\\Documents\\\\master-admin-Appzo\\\\src\\\\Screens\\\\ForgotPassword\\\\ForgotPassword.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Heading, Stack, Button, Flex, Text, Image, Spacer } from \"@chakra-ui/react\";\nimport { primaryLoginC } from \"../../Theme\";\nimport { Formik } from \"formik\";\nimport loginImage from \"../../Images/login-screen.png\";\nimport axios from \"../Helpers/apiClient\";\nimport { SERVER_ADDRESS } from \"../../Services/Config\";\nimport INPUT from \"../../Components/login-input\";\nimport * as Yup from \"yup\";\nimport { useMediaQuery } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgotPassword = props => {\n  return /*#__PURE__*/_jsxDEV(ForgotPasswordStacks, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n\n_c = ForgotPassword;\n\nconst ForgotPasswordStacks = () => {\n  _s();\n\n  const [verifyOtp, setVerifyOtp] = useState(false);\n  const [verifyEmail, setVerifyEmail] = useState(true);\n  const [passwordVerify, setPasswordVerify] = useState(false);\n  const [sessionId, setSessionId] = useState();\n  const [loading, setLoading] = useState(false);\n  const [emailId, setEmailId] = useState(\"\");\n  const [authToken, setAuthToken] = useState();\n  console.log(emailId, \"emailIdemailIdemailId\");\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)');\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    h: \"100vh\",\n    w: \"100vw\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    flexFlow: isLessThan700 ? \"column\" : \"\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      w: isLessThan700 ? \"70%\" : \"30%\",\n      h: isLessThan700 ? \"40%\" : \"50%\",\n      p: \"1%\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: loginImage,\n        height: \"100%\",\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      w: isLessThan700 ? \"100%\" : \"30%\",\n      h: \"50%\",\n      p: \"1%\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        flex: 1,\n        textAlign: \"left\",\n        pt: \"50px\",\n        flexDir: \"column\",\n        p: \"5px\",\n        justifyContent: \"center\",\n        minW: \"50%\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h4\",\n          size: isLessThan700 ? \"lg\" : \"xl\",\n          bgGradient: primaryLoginC,\n          bgClip: \"text\",\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: isLessThan700 ? 13 : 16,\n          bgGradient: primaryLoginC,\n          bgClip: \"text\",\n          children: \"MASTER ADMIN CONSOLE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), verifyEmail ? /*#__PURE__*/_jsxDEV(SendOtpScreen, {\n          setEmailId: setEmailId,\n          setVerifyEmail: setVerifyEmail,\n          setSessionId: setSessionId,\n          loading: loading,\n          setLoading: setLoading,\n          setVerifyOtp: setVerifyOtp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this) : null, verifyOtp ? /*#__PURE__*/_jsxDEV(VerifyOtpScreen, {\n          emailId: emailId,\n          setEmailId: setEmailId,\n          setVerifyOtp: setVerifyOtp,\n          sessionId: sessionId,\n          setSessionId: setSessionId,\n          loading: loading,\n          setLoading: setLoading,\n          setAuthToken: setAuthToken,\n          setPasswordVerify: setPasswordVerify,\n          setVerifyEmail: setVerifyEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this) : null, passwordVerify ? /*#__PURE__*/_jsxDEV(ChangePasswordScreen, {\n          setPasswordVerify: setPasswordVerify,\n          loading: loading,\n          setLoading: setLoading,\n          authToken: authToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgotPasswordStacks, \"t/QYY53GWLlCpRTFEcRUxwzBOrE=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c2 = ForgotPasswordStacks;\n\nconst SendOtpScreen = ({\n  setVerifyEmail,\n  setVerifyOtp,\n  setSessionId,\n  loading,\n  setLoading,\n  setEmailId\n}) => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    onSubmit: values => {\n      let url = SERVER_ADDRESS + \"/api/v1/user/forgot-password\";\n      let temp = {\n        email: values.email\n      };\n      setLoading(true);\n      setEmailId(values.email);\n\n      try {\n        axios.post(url, temp).then(async response => {\n          console.log(\"response\", response);\n          setSessionId(response.data.sessionId);\n        });\n        setVerifyOtp(true);\n        setVerifyEmail(false);\n        setLoading(false);\n      } catch (error) {\n        console.log(\"Try and Catch Error\", error);\n        setLoading(false);\n      }\n    },\n    children: ({\n      handleChange,\n      handleSubmit,\n      values\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        children: [/*#__PURE__*/_jsxDEV(INPUT, {\n          label: \"Email ID\",\n          autoFocus: true,\n          onChange: handleChange,\n          value: values.email,\n          name: \"email\",\n          type: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          isLoading: loading,\n          loadingText: \"Sending...\",\n          bgGradient: primaryLoginC,\n          type: \"submit\",\n          color: \"#fff\",\n          children: \"Send Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = SendOtpScreen;\n\nconst VerifyOtpScreen = ({\n  emailId,\n  setVerifyOtp,\n  setPasswordVerify,\n  sessionId,\n  setSessionId,\n  setEmailId,\n  setVerifyEmail,\n  setAuthToken,\n  loading,\n  setLoading\n}) => {\n  _s2();\n\n  const [seconds, setSeconds] = React.useState(59);\n  useEffect(() => {\n    if (seconds > 0) {\n      setTimeout(() => setSeconds(seconds - 1), 1000);\n    } else {\n      setSeconds(0);\n    }\n  }, [seconds]);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      code: \"\"\n    },\n    onSubmit: values => {\n      let url = SERVER_ADDRESS + \"/api/v1/user/verify-otp\";\n      let temp = {\n        email: emailId,\n        sessionId: sessionId,\n        otp: values.code\n      };\n      let resendOtpUrl = SERVER_ADDRESS + \"/api/v1/user/forgot-password\";\n      let resendOtptemp = {\n        email: emailId\n      };\n      setLoading(true);\n\n      if (seconds !== 0) {\n        axios.post(url, temp).then(async response => {\n          console.log(response);\n          await setEmailId(response.data.data.email);\n          await localStorage.setItem(\"userToken\", JSON.stringify({\n            userToken: response.data.data.authToken\n          }));\n          await setAuthToken(response.data.data.authToken);\n          await setLoading(false);\n          await setPasswordVerify(true);\n          await setVerifyOtp(false);\n          await setVerifyEmail(false);\n        }, error => {\n          console.log(\"Try and Catch Error\", error);\n          setLoading(false);\n        });\n      }\n\n      if (seconds === 0) {\n        try {\n          axios.post(resendOtpUrl, resendOtptemp).then(async response => {\n            console.log(\"response\", response);\n            setSessionId(response.data.sessionId);\n            setLoading(false);\n            setSeconds(59);\n          });\n        } catch (error) {\n          console.log(\"Try and Catch Error\", error);\n          setLoading(false);\n        }\n      }\n    },\n    children: ({\n      handleChange,\n      handleSubmit,\n      values\n    }) => /*#__PURE__*/_jsxDEV(Stack, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(INPUT, {\n          label: \"Enter OTP\",\n          autoFocus: true,\n          maxLength: 6,\n          onChange: handleChange,\n          value: values.code,\n          name: \"code\",\n          type: \"code\",\n          required: seconds === 0 ? false : true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), \" \", seconds === 0 ? /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"16px\",\n          color: \"blue\",\n          cursor: \"pointer\",\n          children: [\" \", \"Resend OTP in 00:\", seconds, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: seconds === 0 ? false : values.code === \"\" || values.code.length < 6,\n          isLoading: loading,\n          loadingText: seconds === 0 ? \"Resending...\" : \"Verifying...\",\n          bgGradient: primaryLoginC,\n          type: \"submit\",\n          color: \"#fff\",\n          children: seconds === 0 ? \"RESEND OTP\" : \"VERIFY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(VerifyOtpScreen, \"RauF+xtqAY9iXW/DY3llyWlF7MQ=\");\n\n_c4 = VerifyOtpScreen;\n\nconst ChangePasswordScreen = ({\n  authToken\n}) => {\n  _s3();\n\n  const history = useHistory();\n  console.log(authToken, \"authToken\");\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        password: \"\",\n        confirmPassword: \"\"\n      },\n      validationSchema: Yup.object().shape({\n        password: Yup.string().min(8).max(20).required(\"Password is required\"),\n        confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n      }),\n      onSubmit: values => {\n        let url = `${SERVER_ADDRESS}/api/v1/user/change-password`;\n        let temp = {\n          password: values.password,\n          confirm_password: values.confirmPassword\n        };\n        console.log(temp, url, \"tempsssss\"); // if (\n        //   values.password === values.confirmPassword &&\n        //   values.confirmPassword.length >= 8 &&\n        //   values.password.length >= 8\n        // ) {\n\n        try {\n          console.log(\"tempsssss\");\n          axios.post(url, temp).then(async response => {\n            if (response.status === 200) {\n              alert(response.data.message);\n              history.push(\"/login\");\n            }\n          }).catch(error => {\n            console.log(error, \"@@@@@@@@su\");\n          });\n        } catch (error) {\n          console.log(\"Try and Catch Error\", error);\n        }\n      },\n      children: ({\n        handleChange,\n        handleSubmit,\n        values,\n        errors,\n        touched,\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(INPUT, {\n          label: \"New Password\",\n          value: values.password,\n          autoFocus: true,\n          onChange: handleChange,\n          name: \"password\",\n          type: \"text\",\n          required: true,\n          error: Boolean(touched.password && errors.password),\n          helperText: touched.password && errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(INPUT, {\n          label: \"Confirm Password\",\n          value: values.confirmPassword,\n          onChange: handleChange,\n          name: \"confirmPassword\",\n          type: \"text\",\n          required: true,\n          error: Boolean(touched.confirmPassword && errors.confirmPassword),\n          helperText: touched.confirmPassword && errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          loading: true,\n          disabled: isSubmitting,\n          loadingText: \"Confirming...\",\n          bgGradient: primaryLoginC,\n          type: \"submit\",\n          color: \"#fff\",\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ChangePasswordScreen, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c5 = ChangePasswordScreen;\nexport default ForgotPassword;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ForgotPassword\");\n$RefreshReg$(_c2, \"ForgotPasswordStacks\");\n$RefreshReg$(_c3, \"SendOtpScreen\");\n$RefreshReg$(_c4, \"VerifyOtpScreen\");\n$RefreshReg$(_c5, \"ChangePasswordScreen\");","map":{"version":3,"sources":["C:/Users/praka/Documents/master-admin-Appzo/src/Screens/ForgotPassword/ForgotPassword.js"],"names":["React","useState","useEffect","useHistory","Heading","Stack","Button","Flex","Text","Image","Spacer","primaryLoginC","Formik","loginImage","axios","SERVER_ADDRESS","INPUT","Yup","useMediaQuery","ForgotPassword","props","ForgotPasswordStacks","verifyOtp","setVerifyOtp","verifyEmail","setVerifyEmail","passwordVerify","setPasswordVerify","sessionId","setSessionId","loading","setLoading","emailId","setEmailId","authToken","setAuthToken","console","log","isLessThan700","SendOtpScreen","email","values","url","temp","post","then","response","data","error","handleChange","handleSubmit","VerifyOtpScreen","seconds","setSeconds","setTimeout","code","otp","resendOtpUrl","resendOtptemp","localStorage","setItem","JSON","stringify","userToken","length","ChangePasswordScreen","history","password","confirmPassword","object","shape","string","min","max","required","oneOf","ref","confirm_password","status","alert","message","push","catch","errors","touched","isSubmitting","Boolean"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Heading,\r\n  Stack,\r\n  Button,\r\n  Flex,\r\n  Text,\r\n  Image,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport { primaryLoginC } from \"../../Theme\";\r\nimport { Formik } from \"formik\";\r\nimport loginImage from \"../../Images/login-screen.png\";\r\nimport axios from \"../Helpers/apiClient\";\r\nimport { SERVER_ADDRESS } from \"../../Services/Config\";\r\nimport INPUT from \"../../Components/login-input\";\r\nimport * as Yup from \"yup\";\r\nimport { useMediaQuery } from '@chakra-ui/react'\r\n\r\nconst ForgotPassword = (props) => {\r\n  return <ForgotPasswordStacks />;\r\n};\r\n\r\nconst ForgotPasswordStacks = () => {\r\n  const [verifyOtp, setVerifyOtp] = useState(false);\r\n  const [verifyEmail, setVerifyEmail] = useState(true);\r\n  const [passwordVerify, setPasswordVerify] = useState(false);\r\n  const [sessionId, setSessionId] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [emailId, setEmailId] = useState(\"\");\r\n  const [authToken, setAuthToken] = useState();\r\n  console.log(emailId, \"emailIdemailIdemailId\");\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)');\r\n\r\n  return (\r\n    <Flex h=\"100vh\" w=\"100vw\" justifyContent=\"space-evenly\" alignItems=\"center\" flexFlow={isLessThan700 ? \"column\" : \"\"}>\r\n      <Flex w={isLessThan700 ? \"70%\" :\"30%\"} h={isLessThan700 ? \"40%\" :\"50%\"} p=\"1%\">\r\n        <Image src={loginImage} height={\"100%\"} width={\"100%\"} />\r\n      </Flex>\r\n      <Flex w={isLessThan700 ? \"100%\" :\"30%\"} h=\"50%\" p=\"1%\">\r\n        <Flex\r\n          flex={1}\r\n          textAlign=\"left\"\r\n          pt=\"50px\"\r\n          flexDir=\"column\"\r\n          p=\"5px\"\r\n          justifyContent=\"center\"\r\n          minW=\"50%\">\r\n          <Heading as=\"h4\" size={isLessThan700 ? \"lg\" :\"xl\"} bgGradient={primaryLoginC} bgClip=\"text\">\r\n            Forgot Password\r\n          </Heading>\r\n          <Text fontSize={isLessThan700 ? 13 :16} bgGradient={primaryLoginC} bgClip=\"text\">\r\n            MASTER ADMIN CONSOLE\r\n          </Text>\r\n          <br />\r\n\r\n          {verifyEmail ? (\r\n            <SendOtpScreen\r\n              setEmailId={setEmailId}\r\n              setVerifyEmail={setVerifyEmail}\r\n              setSessionId={setSessionId}\r\n              loading={loading}\r\n              setLoading={setLoading}\r\n              setVerifyOtp={setVerifyOtp}\r\n            />\r\n          ) : null}\r\n          {verifyOtp ? (\r\n            <VerifyOtpScreen\r\n              emailId={emailId}\r\n              setEmailId={setEmailId}\r\n              setVerifyOtp={setVerifyOtp}\r\n              sessionId={sessionId}\r\n              setSessionId={setSessionId}\r\n              loading={loading}\r\n              setLoading={setLoading}\r\n              setAuthToken={setAuthToken}\r\n              setPasswordVerify={setPasswordVerify}\r\n              setVerifyEmail={setVerifyEmail}\r\n            />\r\n          ) : null}\r\n          {passwordVerify ? (\r\n            <ChangePasswordScreen\r\n              setPasswordVerify={setPasswordVerify}\r\n              loading={loading}\r\n              setLoading={setLoading}\r\n              authToken={authToken}\r\n            />\r\n          ) : null}\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nconst SendOtpScreen = ({\r\n  setVerifyEmail,\r\n  setVerifyOtp,\r\n  setSessionId,\r\n  loading,\r\n  setLoading,\r\n  setEmailId,\r\n}) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n      }}\r\n      onSubmit={(values) => {\r\n        let url = SERVER_ADDRESS + \"/api/v1/user/forgot-password\";\r\n        let temp = {\r\n          email: values.email,\r\n        };\r\n\r\n        setLoading(true);\r\n        setEmailId(values.email);\r\n\r\n        try {\r\n          axios.post(url, temp).then(async (response) => {\r\n            console.log(\"response\", response);\r\n            setSessionId(response.data.sessionId);\r\n          });\r\n          setVerifyOtp(true);\r\n          setVerifyEmail(false);\r\n          setLoading(false);\r\n        } catch (error) {\r\n          console.log(\"Try and Catch Error\", error);\r\n          setLoading(false);\r\n        }\r\n      }}>\r\n      {({ handleChange, handleSubmit, values }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <Stack>\r\n            <INPUT\r\n              label=\"Email ID\"\r\n              autoFocus={true}\r\n              onChange={handleChange}\r\n              value={values.email}\r\n              name=\"email\"\r\n              type=\"email\"\r\n              required={true}\r\n            />\r\n\r\n            <br />\r\n\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText=\"Sending...\"\r\n              bgGradient={primaryLoginC}\r\n              type=\"submit\"\r\n              color=\"#fff\">\r\n              Send Code\r\n            </Button>\r\n          </Stack>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst VerifyOtpScreen = ({\r\n  emailId,\r\n  setVerifyOtp,\r\n  setPasswordVerify,\r\n  sessionId,\r\n  setSessionId,\r\n  setEmailId,\r\n  setVerifyEmail,\r\n  setAuthToken,\r\n  loading,\r\n  setLoading,\r\n}) => {\r\n  const [seconds, setSeconds] = React.useState(59);\r\n\r\n  useEffect(() => {\r\n    if (seconds > 0) {\r\n      setTimeout(() => setSeconds(seconds - 1), 1000);\r\n    } else {\r\n      setSeconds(0);\r\n    }\r\n  }, [seconds]);\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        code: \"\",\r\n      }}\r\n      onSubmit={(values) => {\r\n        let url = SERVER_ADDRESS + \"/api/v1/user/verify-otp\";\r\n\r\n        let temp = {\r\n          email: emailId,\r\n          sessionId: sessionId,\r\n          otp: values.code,\r\n        };\r\n\r\n        let resendOtpUrl = SERVER_ADDRESS + \"/api/v1/user/forgot-password\";\r\n        let resendOtptemp = {\r\n          email: emailId,\r\n        };\r\n        setLoading(true);\r\n        if (seconds !== 0) {\r\n          axios.post(url, temp).then(\r\n            async (response) => {\r\n              console.log(response);\r\n              await setEmailId(response.data.data.email);\r\n              await localStorage.setItem(\r\n                \"userToken\",\r\n                JSON.stringify({\r\n                  userToken: response.data.data.authToken,\r\n                })\r\n              );\r\n              await setAuthToken(response.data.data.authToken);\r\n              await setLoading(false);\r\n              await setPasswordVerify(true);\r\n              await setVerifyOtp(false);\r\n              await setVerifyEmail(false);\r\n            },\r\n\r\n            (error) => {\r\n              console.log(\"Try and Catch Error\", error);\r\n              setLoading(false);\r\n            }\r\n          );\r\n        }\r\n\r\n        if (seconds === 0) {\r\n          try {\r\n            axios.post(resendOtpUrl, resendOtptemp).then(async (response) => {\r\n              console.log(\"response\", response);\r\n              setSessionId(response.data.sessionId);\r\n              setLoading(false);\r\n              setSeconds(59);\r\n            });\r\n          } catch (error) {\r\n            console.log(\"Try and Catch Error\", error);\r\n            setLoading(false);\r\n          }\r\n        }\r\n      }}>\r\n      {({ handleChange, handleSubmit, values }) => (\r\n        <Stack>\r\n          <form onSubmit={handleSubmit}>\r\n            <INPUT\r\n              label=\"Enter OTP\"\r\n              autoFocus={true}\r\n              maxLength={6}\r\n              onChange={handleChange}\r\n              value={values.code}\r\n              name=\"code\"\r\n              type=\"code\"\r\n              required={seconds === 0 ? false : true}\r\n            />{\" \"}\r\n            {seconds === 0 ? (\r\n              <br />\r\n            ) : (\r\n              <Text fontSize=\"16px\" color=\"blue\" cursor=\"pointer\">\r\n                {\" \"}\r\n                Resend OTP in 00:{seconds}s\r\n              </Text>\r\n            )}\r\n            <br />\r\n            <Button\r\n              disabled={\r\n                seconds === 0\r\n                  ? false\r\n                  : values.code === \"\" || values.code.length < 6\r\n              }\r\n              isLoading={loading}\r\n              loadingText={seconds === 0 ? \"Resending...\" : \"Verifying...\"}\r\n              bgGradient={primaryLoginC}\r\n              type=\"submit\"\r\n              color=\"#fff\">\r\n              {seconds === 0 ? \"RESEND OTP\" : \"VERIFY\"}\r\n            </Button>\r\n          </form>\r\n        </Stack>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst ChangePasswordScreen = ({ authToken }) => {\r\n  const history = useHistory();\r\n\r\n  console.log(authToken, \"authToken\");\r\n  return (\r\n    <Stack>\r\n      <Formik\r\n        initialValues={{\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          password: Yup.string()\r\n            .min(8)\r\n            .max(20)\r\n            .required(\"Password is required\"),\r\n          confirmPassword: Yup.string().oneOf(\r\n            [Yup.ref(\"password\"), null],\r\n            \"Passwords must match\"\r\n          ),\r\n        })}\r\n        onSubmit={(values) => {\r\n          let url = `${SERVER_ADDRESS}/api/v1/user/change-password`;\r\n          let temp = {\r\n            password: values.password,\r\n            confirm_password: values.confirmPassword,\r\n          };\r\n          console.log(temp, url, \"tempsssss\");\r\n\r\n          // if (\r\n          //   values.password === values.confirmPassword &&\r\n          //   values.confirmPassword.length >= 8 &&\r\n          //   values.password.length >= 8\r\n          // ) {\r\n            try {\r\n              console.log(\"tempsssss\");\r\n\r\n              axios\r\n                .post(url, temp)\r\n                .then(async (response) => {\r\n                  if(response.status===200){\r\n                    alert(response.data.message);\r\n                    history.push(\"/login\")\r\n                  }\r\n                })\r\n                .catch((error) => {\r\n                  console.log(error, \"@@@@@@@@su\");\r\n                });\r\n            } catch (error) {\r\n              console.log(\"Try and Catch Error\", error);\r\n            }\r\n          \r\n        }}>\r\n        {({ handleChange, handleSubmit, values, errors,touched,isSubmitting }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <INPUT\r\n              label=\"New Password\"\r\n              value={values.password}\r\n              autoFocus={true}\r\n              onChange={handleChange}\r\n              name=\"password\"\r\n              type=\"text\"\r\n              required={true}\r\n              error={Boolean(touched.password && errors.password)}\r\n              helperText={touched.password && errors.password}\r\n            />\r\n            <br />\r\n            <br />\r\n\r\n            <INPUT\r\n              label=\"Confirm Password\"\r\n              value={values.confirmPassword}\r\n              onChange={handleChange}\r\n              name=\"confirmPassword\"\r\n              type=\"text\"\r\n              required={true}\r\n              error={Boolean(touched.confirmPassword && errors.confirmPassword)}\r\n              helperText={touched.confirmPassword && errors.confirmPassword}\r\n            />\r\n\r\n            <br />\r\n            <br />\r\n            <Button\r\n              loading={true}\r\n              disabled={isSubmitting}\r\n              loadingText=\"Confirming...\"\r\n              bgGradient={primaryLoginC}\r\n              type=\"submit\"\r\n              color=\"#fff\">\r\n              Confirm\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"]},"metadata":{},"sourceType":"module"}