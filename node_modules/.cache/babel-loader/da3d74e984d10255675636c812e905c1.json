{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/praka/Desktop/deploy/master-admin-Appzo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/praka/Desktop/deploy/master-admin-Appzo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect,useState}from\"react\";import{BrowserRouter,Redirect}from\"react-router-dom\";//Routes Type\nimport PublicRoutes from\"./Public-Routes\";import ProtectedRoutes from\"./Protected-Routes\";import{useSelector,useDispatch}from\"react-redux\";import{doLoginAction}from\"../Screens/Login/Action\";import{jsx as _jsx}from\"react/jsx-runtime\";var AppRouter=function AppRouter(){var dispatch=useDispatch();useEffect(function(){handelRefresh();},[]);var handelRefresh=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var restoreData,newRestoredData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return localStorage.getItem('userData');case 2:restoreData=_context.sent;newRestoredData=JSON.parse(restoreData,'222222222');console.log(newRestoredData,'newRestoredDatanewRestoredData');_context.next=7;return dispatch(doLoginAction(newRestoredData));case 7:case\"end\":return _context.stop();}}},_callee);}));return function handelRefresh(){return _ref.apply(this,arguments);};}();var Authorization=useSelector(function(s){return s.token;});console.log(Authorization,'@@@@@@@@@@@@@');if(Authorization===null||Authorization.length===0||Authorization===undefined){return/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(PublicRoutes,{})});}else{return/*#__PURE__*/_jsx(BrowserRouter,{children:Authorization?/*#__PURE__*/_jsx(ProtectedRoutes,{}):/*#__PURE__*/_jsx(PublicRoutes,{})});}};export default AppRouter;","map":{"version":3,"sources":["C:/Users/praka/Desktop/deploy/master-admin-Appzo/src/Routes/index.js"],"names":["React","useEffect","useState","BrowserRouter","Redirect","PublicRoutes","ProtectedRoutes","useSelector","useDispatch","doLoginAction","AppRouter","dispatch","handelRefresh","localStorage","getItem","restoreData","newRestoredData","JSON","parse","console","log","Authorization","s","token","length","undefined"],"mappings":"2UAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,aAAT,CAAwBC,QAAxB,KAAwC,kBAAxC,CAGA;AACA,MAAOC,CAAAA,YAAP,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,aAAT,KAA8B,yBAA9B,C,2CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAEtB,GAAMC,CAAAA,QAAQ,CAAGH,WAAW,EAA5B,CAEAP,SAAS,CAAC,UAAM,CACdW,aAAa,GAEd,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAMA,CAAAA,aAAa,0FAAG,yLAEIC,CAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,CAFJ,QAEhBC,WAFgB,eAGhBC,eAHgB,CAGEC,IAAI,CAACC,KAAL,CAAWH,WAAX,CAAwB,WAAxB,CAHF,CAIpBI,OAAO,CAACC,GAAR,CAAYJ,eAAZ,CAA6B,gCAA7B,EAJoB,sBAKdL,CAAAA,QAAQ,CAACF,aAAa,CAACO,eAAD,CAAd,CALM,uDAAH,kBAAbJ,CAAAA,aAAa,0CAAnB,CAQA,GAAMS,CAAAA,aAAa,CAAGd,WAAW,CAAC,SAACe,CAAD,QAAOA,CAAAA,CAAC,CAACC,KAAT,EAAD,CAAjC,CACAJ,OAAO,CAACC,GAAR,CAAYC,aAAZ,CAA2B,eAA3B,EACA,GACEA,aAAa,GAAK,IAAlB,EACAA,aAAa,CAACG,MAAd,GAAyB,CADzB,EAEAH,aAAa,GAAKI,SAHpB,CAIE,CACA,mBACE,KAAC,aAAD,wBACE,KAAC,YAAD,IADF,EADF,CAMD,CAXD,IAWO,CACL,mBACE,KAAC,aAAD,WACGJ,aAAa,cAAG,KAAC,eAAD,IAAH,cAAyB,KAAC,YAAD,IADzC,EADF,CAKD,CACF,CArCD,CAuCA,cAAeX,CAAAA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Redirect } from \"react-router-dom\";\r\n\r\n\r\n//Routes Type\r\nimport PublicRoutes from \"./Public-Routes\";\r\nimport ProtectedRoutes from \"./Protected-Routes\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { doLoginAction } from \"../Screens/Login/Action\";\r\n\r\nconst AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    handelRefresh()\r\n\r\n  }, [])\r\n\r\n  const handelRefresh = async () => {\r\n\r\n    let restoreData = await localStorage.getItem('userData');\r\n    let newRestoredData = JSON.parse(restoreData, '222222222');\r\n    console.log(newRestoredData, 'newRestoredDatanewRestoredData')\r\n    await dispatch(doLoginAction(newRestoredData));\r\n  }\r\n\r\n  const Authorization = useSelector((s) => s.token);\r\n  console.log(Authorization, '@@@@@@@@@@@@@')\r\n  if (\r\n    Authorization === null ||\r\n    Authorization.length === 0 ||\r\n    Authorization === undefined\r\n  ) {\r\n    return (\r\n      <BrowserRouter>\r\n        <PublicRoutes />\r\n      </BrowserRouter>\r\n\r\n    )\r\n  } else {\r\n    return (\r\n      <BrowserRouter>\r\n        {Authorization ? <ProtectedRoutes /> : <PublicRoutes />}\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AppRouter;\r\n"]},"metadata":{},"sourceType":"module"}