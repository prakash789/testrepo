[{"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\index.js":"1","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\reportWebVitals.js":"2","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\App.js":"3","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\MessageAlert.js":"4","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Store\\index.js":"5","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Routes\\index.js":"6","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Login\\Action\\index.js":"7","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Routes\\Protected-Routes.js":"8","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Routes\\Public-Routes.js":"9","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Reducer\\index.js":"10","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Login\\Types\\index.js":"11","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Dashboard\\DashboardHospitalWise.js":"12","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\Layout\\Layout.js":"13","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\ForgotPassword\\ForgotPassword.js":"14","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Login\\index.js":"15","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Dashboard\\index.js":"16","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Onboarding\\index.js":"17","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\LabOnboarding\\index.js":"18","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Patient-Information\\index.js":"19","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Webvitals\\index.js":"20","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Messanger\\index.js":"21","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Patient-Leaflet\\index.js":"22","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\MrOnboarding\\index.js":"23","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Dashboard\\DashboardAnalyticsHospitalWise.js":"24","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\DashboardTabs.js":"25","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\login-input.js":"26","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\AppHeader\\header.js":"27","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Helpers\\apiClient.js":"28","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Services\\Config.js":"29","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Reducer\\Login-Reducer\\index.js":"30","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Reducer\\AppHeader-Reducer\\index.js":"31","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Dashboard\\DashboardAnalytics.js":"32","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\ImageCrop.js":"33","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\assests.js":"34","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Theme\\index.js":"35","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\Tables\\HospitalTable\\HospitalTable.js":"36","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\PatientCard.js":"37","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\TotalOutstanding\\TotalOutstanding.js":"38","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\Tables\\PatientTable\\PatientTable.js":"39","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\OpdGraph\\OpdGraph.js":"40","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Helpers\\auth.js":"41","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\AppHeader\\action.js":"42","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\PopOver-Action-Buton\\index.js":"43","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Consts\\index.js":"44","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\sideBarData\\index.js":"45","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\AppHeader\\Types\\index.js":"46","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\button.js":"47","C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\itextInput.js":"48","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\index.js":"49","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\App.js":"50","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\reportWebVitals.js":"51","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\MessageAlert.js":"52","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Routes\\index.js":"53","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Store\\index.js":"54","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Login\\Action\\index.js":"55","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Routes\\Public-Routes.js":"56","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Routes\\Protected-Routes.js":"57","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Reducer\\index.js":"58","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Login\\Types\\index.js":"59","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Dashboard\\DashboardHospitalWise.js":"60","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\ForgotPassword\\ForgotPassword.js":"61","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\Layout\\Layout.js":"62","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Login\\index.js":"63","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Dashboard\\index.js":"64","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Messanger\\index.js":"65","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\LabOnboarding\\index.js":"66","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Patient-Leaflet\\index.js":"67","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\MrOnboarding\\index.js":"68","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Webvitals\\index.js":"69","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Onboarding\\index.js":"70","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Patient-Information\\index.js":"71","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\DashboardTabs.js":"72","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Dashboard\\DashboardAnalyticsHospitalWise.js":"73","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\login-input.js":"74","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Helpers\\apiClient.js":"75","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Services\\Config.js":"76","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\AppHeader\\header.js":"77","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Reducer\\AppHeader-Reducer\\index.js":"78","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Reducer\\Login-Reducer\\index.js":"79","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Dashboard\\DashboardAnalytics.js":"80","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\PatientCard.js":"81","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\assests.js":"82","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\ImageCrop.js":"83","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Theme\\index.js":"84","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\Tables\\HospitalTable\\HospitalTable.js":"85","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Helpers\\auth.js":"86","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\TotalOutstanding\\TotalOutstanding.js":"87","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\Tables\\PatientTable\\PatientTable.js":"88","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\OpdGraph\\OpdGraph.js":"89","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\PopOver-Action-Buton\\index.js":"90","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Consts\\index.js":"91","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\AppHeader\\Types\\index.js":"92","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\button.js":"93","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\AppHeader\\action.js":"94","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\itextInput.js":"95","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\sideBarData\\index.js":"96"},{"size":500,"mtime":1626159182000,"results":"97","hashOfConfig":"98"},{"size":362,"mtime":1626159182000,"results":"99","hashOfConfig":"98"},{"size":643,"mtime":1643004286000,"results":"100","hashOfConfig":"98"},{"size":520,"mtime":1643004286000,"results":"101","hashOfConfig":"98"},{"size":233,"mtime":1629015520000,"results":"102","hashOfConfig":"98"},{"size":1261,"mtime":1643004766000,"results":"103","hashOfConfig":"98"},{"size":170,"mtime":1628842240000,"results":"104","hashOfConfig":"98"},{"size":1568,"mtime":1643004766000,"results":"105","hashOfConfig":"98"},{"size":494,"mtime":1632558060000,"results":"106","hashOfConfig":"98"},{"size":360,"mtime":1629005724000,"results":"107","hashOfConfig":"98"},{"size":47,"mtime":1628497172000,"results":"108","hashOfConfig":"98"},{"size":354,"mtime":1629109646000,"results":"109","hashOfConfig":"98"},{"size":325,"mtime":1629005472000,"results":"110","hashOfConfig":"98"},{"size":11295,"mtime":1643004286000,"results":"111","hashOfConfig":"98"},{"size":5499,"mtime":1643004286000,"results":"112","hashOfConfig":"98"},{"size":455,"mtime":1629107820000,"results":"113","hashOfConfig":"98"},{"size":10610,"mtime":1643004766000,"results":"114","hashOfConfig":"98"},{"size":5677,"mtime":1643004286000,"results":"115","hashOfConfig":"98"},{"size":2624,"mtime":1643004286000,"results":"116","hashOfConfig":"98"},{"size":3490,"mtime":1643004766000,"results":"117","hashOfConfig":"98"},{"size":2460,"mtime":1643004286000,"results":"118","hashOfConfig":"98"},{"size":3581,"mtime":1643004286000,"results":"119","hashOfConfig":"98"},{"size":11336,"mtime":1643004766000,"results":"120","hashOfConfig":"98"},{"size":4822,"mtime":1643004286000,"results":"121","hashOfConfig":"98"},{"size":1772,"mtime":1643004286000,"results":"122","hashOfConfig":"98"},{"size":699,"mtime":1643004286000,"results":"123","hashOfConfig":"98"},{"size":8442,"mtime":1644236862487,"results":"124","hashOfConfig":"98"},{"size":476,"mtime":1643004286000,"results":"125","hashOfConfig":"98"},{"size":58,"mtime":1638976470000,"results":"126","hashOfConfig":"98"},{"size":232,"mtime":1628841896000,"results":"127","hashOfConfig":"98"},{"size":253,"mtime":1629005650000,"results":"128","hashOfConfig":"98"},{"size":2793,"mtime":1643004286000,"results":"129","hashOfConfig":"98"},{"size":9747,"mtime":1643004766000,"results":"130","hashOfConfig":"98"},{"size":7415,"mtime":1629120508000,"results":"131","hashOfConfig":"98"},{"size":634,"mtime":1639138280000,"results":"132","hashOfConfig":"98"},{"size":1696,"mtime":1643004286000,"results":"133","hashOfConfig":"98"},{"size":1938,"mtime":1643004286000,"results":"134","hashOfConfig":"98"},{"size":2796,"mtime":1643004286000,"results":"135","hashOfConfig":"98"},{"size":1663,"mtime":1643004286000,"results":"136","hashOfConfig":"98"},{"size":1153,"mtime":1643004286000,"results":"137","hashOfConfig":"98"},{"size":648,"mtime":1632654760000,"results":"138","hashOfConfig":"98"},{"size":187,"mtime":1644316094336,"results":"139","hashOfConfig":"98"},{"size":2121,"mtime":1643004286000,"results":"140","hashOfConfig":"98"},{"size":470,"mtime":1629120076000,"results":"141","hashOfConfig":"98"},{"size":984,"mtime":1643004766000,"results":"142","hashOfConfig":"98"},{"size":61,"mtime":1629005464000,"results":"143","hashOfConfig":"98"},{"size":659,"mtime":1643004286000,"results":"144","hashOfConfig":"98"},{"size":586,"mtime":1643004286000,"results":"145","hashOfConfig":"98"},{"size":500,"mtime":1626159182000,"results":"146","hashOfConfig":"147"},{"size":643,"mtime":1643004286000,"results":"148","hashOfConfig":"147"},{"size":362,"mtime":1626159182000,"results":"149","hashOfConfig":"147"},{"size":520,"mtime":1643004286000,"results":"150","hashOfConfig":"147"},{"size":1261,"mtime":1643004766000,"results":"151","hashOfConfig":"147"},{"size":233,"mtime":1629015520000,"results":"152","hashOfConfig":"147"},{"size":170,"mtime":1628842240000,"results":"153","hashOfConfig":"147"},{"size":494,"mtime":1632558060000,"results":"154","hashOfConfig":"147"},{"size":1568,"mtime":1643004766000,"results":"155","hashOfConfig":"147"},{"size":360,"mtime":1629005724000,"results":"156","hashOfConfig":"147"},{"size":47,"mtime":1628497172000,"results":"157","hashOfConfig":"147"},{"size":354,"mtime":1629109646000,"results":"158","hashOfConfig":"147"},{"size":11295,"mtime":1643004286000,"results":"159","hashOfConfig":"147"},{"size":325,"mtime":1629005472000,"results":"160","hashOfConfig":"147"},{"size":5499,"mtime":1643004286000,"results":"161","hashOfConfig":"147"},{"size":455,"mtime":1629107820000,"results":"162","hashOfConfig":"147"},{"size":2460,"mtime":1643004286000,"results":"163","hashOfConfig":"147"},{"size":5677,"mtime":1643004286000,"results":"164","hashOfConfig":"147"},{"size":3581,"mtime":1643004286000,"results":"165","hashOfConfig":"147"},{"size":11336,"mtime":1643004766000,"results":"166","hashOfConfig":"147"},{"size":3490,"mtime":1643004766000,"results":"167","hashOfConfig":"147"},{"size":10610,"mtime":1643004766000,"results":"168","hashOfConfig":"147"},{"size":2624,"mtime":1643004286000,"results":"169","hashOfConfig":"147"},{"size":1772,"mtime":1643004286000,"results":"170","hashOfConfig":"147"},{"size":4822,"mtime":1643004286000,"results":"171","hashOfConfig":"147"},{"size":699,"mtime":1643004286000,"results":"172","hashOfConfig":"147"},{"size":476,"mtime":1643004286000,"results":"173","hashOfConfig":"147"},{"size":58,"mtime":1638976470000,"results":"174","hashOfConfig":"147"},{"size":8442,"mtime":1644236862487,"results":"175","hashOfConfig":"147"},{"size":253,"mtime":1629005650000,"results":"176","hashOfConfig":"147"},{"size":232,"mtime":1628841896000,"results":"177","hashOfConfig":"147"},{"size":2793,"mtime":1643004286000,"results":"178","hashOfConfig":"147"},{"size":1938,"mtime":1643004286000,"results":"179","hashOfConfig":"147"},{"size":7415,"mtime":1629120508000,"results":"180","hashOfConfig":"147"},{"size":9747,"mtime":1643004766000,"results":"181","hashOfConfig":"147"},{"size":634,"mtime":1639138280000,"results":"182","hashOfConfig":"147"},{"size":1696,"mtime":1643004286000,"results":"183","hashOfConfig":"147"},{"size":648,"mtime":1632654760000,"results":"184","hashOfConfig":"147"},{"size":2796,"mtime":1643004286000,"results":"185","hashOfConfig":"147"},{"size":1663,"mtime":1643004286000,"results":"186","hashOfConfig":"147"},{"size":1153,"mtime":1643004286000,"results":"187","hashOfConfig":"147"},{"size":2121,"mtime":1643004286000,"results":"188","hashOfConfig":"147"},{"size":470,"mtime":1629120076000,"results":"189","hashOfConfig":"147"},{"size":61,"mtime":1629005464000,"results":"190","hashOfConfig":"147"},{"size":659,"mtime":1643004286000,"results":"191","hashOfConfig":"147"},{"size":187,"mtime":1644316094336,"results":"192","hashOfConfig":"147"},{"size":586,"mtime":1643004286000,"results":"193","hashOfConfig":"147"},{"size":984,"mtime":1643004766000,"results":"194","hashOfConfig":"147"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9djrut",{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ghwnt3",{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\index.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\reportWebVitals.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\App.js",["410","411","412","413"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\MessageAlert.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Store\\index.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Routes\\index.js",["414","415","416"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Login\\Action\\index.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Routes\\Protected-Routes.js",["417"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Routes\\Public-Routes.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Reducer\\index.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Login\\Types\\index.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Dashboard\\DashboardHospitalWise.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\Layout\\Layout.js",["418"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\ForgotPassword\\ForgotPassword.js",["419"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Login\\index.js",["420"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Dashboard\\index.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Onboarding\\index.js",["421","422","423"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\LabOnboarding\\index.js",["424","425","426","427","428","429","430"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Patient-Information\\index.js",["431","432","433","434","435","436","437"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Webvitals\\index.js",["438","439","440","441","442"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Messanger\\index.js",["443"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Patient-Leaflet\\index.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\MrOnboarding\\index.js",["444","445","446","447","448","449","450","451","452"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Dashboard\\DashboardAnalyticsHospitalWise.js",["453"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\DashboardTabs.js",["454"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\login-input.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\AppHeader\\header.js",["455","456"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Helpers\\apiClient.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Services\\Config.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Reducer\\Login-Reducer\\index.js",["457"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Reducer\\AppHeader-Reducer\\index.js",["458"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Dashboard\\DashboardAnalytics.js",["459","460","461","462","463"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\ImageCrop.js",["464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\assests.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Theme\\index.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\Tables\\HospitalTable\\HospitalTable.js",["481"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\PatientCard.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\TotalOutstanding\\TotalOutstanding.js",["482"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\Tables\\PatientTable\\PatientTable.js",["483"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\OpdGraph\\OpdGraph.js",["484"],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Screens\\Helpers\\auth.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\AppHeader\\action.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\PopOver-Action-Buton\\index.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Consts\\index.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\sideBarData\\index.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\AppHeader\\Types\\index.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\button.js",[],"C:\\Users\\praka\\Documents\\master-admin-Appzo\\src\\Components\\itextInput.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\index.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\App.js",["485","486","487","488"],"import React,{useEffect} from \"react\";\r\nimport AppRouter from \"./Routes\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport  MessageAlert from './Components/MessageAlert'\r\n\r\n//redux\r\nimport { Provider, useDispatch } from \"react-redux\";\r\nimport {store} from \"../src/Store\";\r\nimport { doLoginAction } from \"./Screens/Login/Action\";\r\n\r\n\r\nconst App = () => {\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <ChakraProvider>\r\n      <MainLayout />\r\n    </ChakraProvider>\r\n  )\r\n};\r\n\r\nconst MainLayout = () => {\r\n  return (\r\n    <Provider store={store}>\r\n        <div>\r\n\r\n          <AppRouter/>\r\n        </div>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\reportWebVitals.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\MessageAlert.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Routes\\index.js",["489","490","491"],"import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Redirect } from \"react-router-dom\";\r\n\r\n\r\n//Routes Type\r\nimport PublicRoutes from \"./Public-Routes\";\r\nimport ProtectedRoutes from \"./Protected-Routes\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { doLoginAction } from \"../Screens/Login/Action\";\r\n\r\nconst AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    handelRefresh()\r\n\r\n  }, [])\r\n\r\n  const handelRefresh = async () => {\r\n\r\n    let restoreData = await localStorage.getItem('userData');\r\n    let newRestoredData = JSON.parse(restoreData, '222222222');\r\n    console.log(newRestoredData, 'newRestoredDatanewRestoredData')\r\n    await dispatch(doLoginAction(newRestoredData));\r\n  }\r\n\r\n  const Authorization = useSelector((s) => s.token);\r\n  console.log(Authorization, '@@@@@@@@@@@@@')\r\n  if (\r\n    Authorization === null ||\r\n    Authorization.length === 0 ||\r\n    Authorization === undefined\r\n  ) {\r\n    return (\r\n      <BrowserRouter>\r\n        <PublicRoutes />\r\n      </BrowserRouter>\r\n\r\n    )\r\n  } else {\r\n    return (\r\n      <BrowserRouter>\r\n        {Authorization ? <ProtectedRoutes /> : <PublicRoutes />}\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AppRouter;\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Store\\index.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Login\\Action\\index.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Routes\\Public-Routes.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Routes\\Protected-Routes.js",["492"],"import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Layout from \"../Components/Layout/Layout\";\r\nimport Dashboard from \"../Screens/Dashboard\";\r\nimport DashboardHospitalWise from \"../Screens/Dashboard/DashboardHospitalWise\";\r\nimport LabOnboarding from \"../Screens/LabOnboarding\";\r\nimport Messanger from \"../Screens/Messanger\";\r\nimport MrOnboarding from \"../Screens/MrOnboarding\";\r\nimport Onboarding from \"../Screens/Onboarding\";\r\nimport PatientInformation from \"../Screens/Patient-Information\";\r\nimport PatientLeaflet from \"../Screens/Patient-Leaflet\";\r\nimport Webvitals from \"../Screens/Webvitals\";\r\nconst ProtectedRoutes = () => {\r\n  return (\r\n    <Layout>\r\n      <Switch>\r\n        <Route exact path=\"/dashboard\" component={Dashboard} />\r\n        <Route\r\n          exact\r\n          path=\"/hospital\"\r\n          component={DashboardHospitalWise}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/patient-information\"\r\n          component={PatientInformation}\r\n        />\r\n        <Route exact path=\"/onboarding\" component={Onboarding} />\r\n        <Route exact path=\"/mr-onboarding\" component={MrOnboarding} />\r\n        <Route exact path=\"/webvitals\" component={Webvitals} />\r\n        <Route exact path=\"/patient-leaflet\" component={PatientLeaflet} />\r\n        <Route exact path=\"/messanger\" component={Messanger} />\r\n        <Route exact path=\"/lab-onboarding\" component={LabOnboarding} />\r\n        {/* <Redirect to=\"/Dashboard\"/> */}\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoutes;\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Reducer\\index.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Login\\Types\\index.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Dashboard\\DashboardHospitalWise.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\ForgotPassword\\ForgotPassword.js",["493"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Heading,\r\n  Stack,\r\n  Button,\r\n  Flex,\r\n  Text,\r\n  Image,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport { primaryLoginC } from \"../../Theme\";\r\nimport { Formik } from \"formik\";\r\nimport loginImage from \"../../Images/login-screen.png\";\r\nimport axios from \"../Helpers/apiClient\";\r\nimport { SERVER_ADDRESS } from \"../../Services/Config\";\r\nimport INPUT from \"../../Components/login-input\";\r\nimport * as Yup from \"yup\";\r\nimport { useMediaQuery } from '@chakra-ui/react'\r\n\r\nconst ForgotPassword = (props) => {\r\n  return <ForgotPasswordStacks />;\r\n};\r\n\r\nconst ForgotPasswordStacks = () => {\r\n  const [verifyOtp, setVerifyOtp] = useState(false);\r\n  const [verifyEmail, setVerifyEmail] = useState(true);\r\n  const [passwordVerify, setPasswordVerify] = useState(false);\r\n  const [sessionId, setSessionId] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [emailId, setEmailId] = useState(\"\");\r\n  const [authToken, setAuthToken] = useState();\r\n  console.log(emailId, \"emailIdemailIdemailId\");\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)');\r\n\r\n  return (\r\n    <Flex h=\"100vh\" w=\"100vw\" justifyContent=\"space-evenly\" alignItems=\"center\" flexFlow={isLessThan700 ? \"column\" : \"\"}>\r\n      <Flex w={isLessThan700 ? \"70%\" :\"30%\"} h={isLessThan700 ? \"40%\" :\"50%\"} p=\"1%\">\r\n        <Image src={loginImage} height={\"100%\"} width={\"100%\"} />\r\n      </Flex>\r\n      <Flex w={isLessThan700 ? \"100%\" :\"30%\"} h=\"50%\" p=\"1%\">\r\n        <Flex\r\n          flex={1}\r\n          textAlign=\"left\"\r\n          pt=\"50px\"\r\n          flexDir=\"column\"\r\n          p=\"5px\"\r\n          justifyContent=\"center\"\r\n          minW=\"50%\">\r\n          <Heading as=\"h4\" size={isLessThan700 ? \"lg\" :\"xl\"} bgGradient={primaryLoginC} bgClip=\"text\">\r\n            Forgot Password\r\n          </Heading>\r\n          <Text fontSize={isLessThan700 ? 13 :16} bgGradient={primaryLoginC} bgClip=\"text\">\r\n            MASTER ADMIN CONSOLE\r\n          </Text>\r\n          <br />\r\n\r\n          {verifyEmail ? (\r\n            <SendOtpScreen\r\n              setEmailId={setEmailId}\r\n              setVerifyEmail={setVerifyEmail}\r\n              setSessionId={setSessionId}\r\n              loading={loading}\r\n              setLoading={setLoading}\r\n              setVerifyOtp={setVerifyOtp}\r\n            />\r\n          ) : null}\r\n          {verifyOtp ? (\r\n            <VerifyOtpScreen\r\n              emailId={emailId}\r\n              setEmailId={setEmailId}\r\n              setVerifyOtp={setVerifyOtp}\r\n              sessionId={sessionId}\r\n              setSessionId={setSessionId}\r\n              loading={loading}\r\n              setLoading={setLoading}\r\n              setAuthToken={setAuthToken}\r\n              setPasswordVerify={setPasswordVerify}\r\n              setVerifyEmail={setVerifyEmail}\r\n            />\r\n          ) : null}\r\n          {passwordVerify ? (\r\n            <ChangePasswordScreen\r\n              setPasswordVerify={setPasswordVerify}\r\n              loading={loading}\r\n              setLoading={setLoading}\r\n              authToken={authToken}\r\n            />\r\n          ) : null}\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nconst SendOtpScreen = ({\r\n  setVerifyEmail,\r\n  setVerifyOtp,\r\n  setSessionId,\r\n  loading,\r\n  setLoading,\r\n  setEmailId,\r\n}) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n      }}\r\n      onSubmit={(values) => {\r\n        let url = SERVER_ADDRESS + \"/api/v1/user/forgot-password\";\r\n        let temp = {\r\n          email: values.email,\r\n        };\r\n\r\n        setLoading(true);\r\n        setEmailId(values.email);\r\n\r\n        try {\r\n          axios.post(url, temp).then(async (response) => {\r\n            console.log(\"response\", response);\r\n            setSessionId(response.data.sessionId);\r\n          });\r\n          setVerifyOtp(true);\r\n          setVerifyEmail(false);\r\n          setLoading(false);\r\n        } catch (error) {\r\n          console.log(\"Try and Catch Error\", error);\r\n          setLoading(false);\r\n        }\r\n      }}>\r\n      {({ handleChange, handleSubmit, values }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <Stack>\r\n            <INPUT\r\n              label=\"Email ID\"\r\n              autoFocus={true}\r\n              onChange={handleChange}\r\n              value={values.email}\r\n              name=\"email\"\r\n              type=\"email\"\r\n              required={true}\r\n            />\r\n\r\n            <br />\r\n\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText=\"Sending...\"\r\n              bgGradient={primaryLoginC}\r\n              type=\"submit\"\r\n              color=\"#fff\">\r\n              Send Code\r\n            </Button>\r\n          </Stack>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst VerifyOtpScreen = ({\r\n  emailId,\r\n  setVerifyOtp,\r\n  setPasswordVerify,\r\n  sessionId,\r\n  setSessionId,\r\n  setEmailId,\r\n  setVerifyEmail,\r\n  setAuthToken,\r\n  loading,\r\n  setLoading,\r\n}) => {\r\n  const [seconds, setSeconds] = React.useState(59);\r\n\r\n  useEffect(() => {\r\n    if (seconds > 0) {\r\n      setTimeout(() => setSeconds(seconds - 1), 1000);\r\n    } else {\r\n      setSeconds(0);\r\n    }\r\n  }, [seconds]);\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        code: \"\",\r\n      }}\r\n      onSubmit={(values) => {\r\n        let url = SERVER_ADDRESS + \"/api/v1/user/verify-otp\";\r\n\r\n        let temp = {\r\n          email: emailId,\r\n          sessionId: sessionId,\r\n          otp: values.code,\r\n        };\r\n\r\n        let resendOtpUrl = SERVER_ADDRESS + \"/api/v1/user/forgot-password\";\r\n        let resendOtptemp = {\r\n          email: emailId,\r\n        };\r\n        setLoading(true);\r\n        if (seconds !== 0) {\r\n          axios.post(url, temp).then(\r\n            async (response) => {\r\n              console.log(response);\r\n              await setEmailId(response.data.data.email);\r\n              await localStorage.setItem(\r\n                \"userToken\",\r\n                JSON.stringify({\r\n                  userToken: response.data.data.authToken,\r\n                })\r\n              );\r\n              await setAuthToken(response.data.data.authToken);\r\n              await setLoading(false);\r\n              await setPasswordVerify(true);\r\n              await setVerifyOtp(false);\r\n              await setVerifyEmail(false);\r\n            },\r\n\r\n            (error) => {\r\n              console.log(\"Try and Catch Error\", error);\r\n              setLoading(false);\r\n            }\r\n          );\r\n        }\r\n\r\n        if (seconds === 0) {\r\n          try {\r\n            axios.post(resendOtpUrl, resendOtptemp).then(async (response) => {\r\n              console.log(\"response\", response);\r\n              setSessionId(response.data.sessionId);\r\n              setLoading(false);\r\n              setSeconds(59);\r\n            });\r\n          } catch (error) {\r\n            console.log(\"Try and Catch Error\", error);\r\n            setLoading(false);\r\n          }\r\n        }\r\n      }}>\r\n      {({ handleChange, handleSubmit, values }) => (\r\n        <Stack>\r\n          <form onSubmit={handleSubmit}>\r\n            <INPUT\r\n              label=\"Enter OTP\"\r\n              autoFocus={true}\r\n              maxLength={6}\r\n              onChange={handleChange}\r\n              value={values.code}\r\n              name=\"code\"\r\n              type=\"code\"\r\n              required={seconds === 0 ? false : true}\r\n            />{\" \"}\r\n            {seconds === 0 ? (\r\n              <br />\r\n            ) : (\r\n              <Text fontSize=\"16px\" color=\"blue\" cursor=\"pointer\">\r\n                {\" \"}\r\n                Resend OTP in 00:{seconds}s\r\n              </Text>\r\n            )}\r\n            <br />\r\n            <Button\r\n              disabled={\r\n                seconds === 0\r\n                  ? false\r\n                  : values.code === \"\" || values.code.length < 6\r\n              }\r\n              isLoading={loading}\r\n              loadingText={seconds === 0 ? \"Resending...\" : \"Verifying...\"}\r\n              bgGradient={primaryLoginC}\r\n              type=\"submit\"\r\n              color=\"#fff\">\r\n              {seconds === 0 ? \"RESEND OTP\" : \"VERIFY\"}\r\n            </Button>\r\n          </form>\r\n        </Stack>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst ChangePasswordScreen = ({ authToken }) => {\r\n  const history = useHistory();\r\n\r\n  console.log(authToken, \"authToken\");\r\n  return (\r\n    <Stack>\r\n      <Formik\r\n        initialValues={{\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          password: Yup.string()\r\n            .min(8)\r\n            .max(20)\r\n            .required(\"Password is required\"),\r\n          confirmPassword: Yup.string().oneOf(\r\n            [Yup.ref(\"password\"), null],\r\n            \"Passwords must match\"\r\n          ),\r\n        })}\r\n        onSubmit={(values) => {\r\n          let url = `${SERVER_ADDRESS}/api/v1/user/change-password`;\r\n          let temp = {\r\n            password: values.password,\r\n            confirm_password: values.confirmPassword,\r\n          };\r\n          console.log(temp, url, \"tempsssss\");\r\n\r\n          // if (\r\n          //   values.password === values.confirmPassword &&\r\n          //   values.confirmPassword.length >= 8 &&\r\n          //   values.password.length >= 8\r\n          // ) {\r\n            try {\r\n              console.log(\"tempsssss\");\r\n\r\n              axios\r\n                .post(url, temp)\r\n                .then(async (response) => {\r\n                  if(response.status===200){\r\n                    alert(response.data.message);\r\n                    history.push(\"/login\")\r\n                  }\r\n                })\r\n                .catch((error) => {\r\n                  console.log(error, \"@@@@@@@@su\");\r\n                });\r\n            } catch (error) {\r\n              console.log(\"Try and Catch Error\", error);\r\n            }\r\n          \r\n        }}>\r\n        {({ handleChange, handleSubmit, values, errors,touched,isSubmitting }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <INPUT\r\n              label=\"New Password\"\r\n              value={values.password}\r\n              autoFocus={true}\r\n              onChange={handleChange}\r\n              name=\"password\"\r\n              type=\"text\"\r\n              required={true}\r\n              error={Boolean(touched.password && errors.password)}\r\n              helperText={touched.password && errors.password}\r\n            />\r\n            <br />\r\n            <br />\r\n\r\n            <INPUT\r\n              label=\"Confirm Password\"\r\n              value={values.confirmPassword}\r\n              onChange={handleChange}\r\n              name=\"confirmPassword\"\r\n              type=\"text\"\r\n              required={true}\r\n              error={Boolean(touched.confirmPassword && errors.confirmPassword)}\r\n              helperText={touched.confirmPassword && errors.confirmPassword}\r\n            />\r\n\r\n            <br />\r\n            <br />\r\n            <Button\r\n              loading={true}\r\n              disabled={isSubmitting}\r\n              loadingText=\"Confirming...\"\r\n              bgGradient={primaryLoginC}\r\n              type=\"submit\"\r\n              color=\"#fff\">\r\n              Confirm\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\Layout\\Layout.js",["494"],"import { Box, Flex } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport Header from \"../AppHeader/header\";\r\n\r\nconst Layout = ({ children } ) => {\r\n \r\n  return (\r\n    <Box position=\"fixed\" top={0} left={70} right={0} bottom={0}>\r\n      <Header children={children} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Login\\index.js",["495"],"import React, { useState } from \"react\";\r\n\r\nimport { Heading, Stack, Button, Flex, Text, Image } from \"@chakra-ui/react\";\r\nimport { primaryLoginC } from \"../../Theme\";\r\nimport INPUT from \"../../Components/login-input\";\r\nimport loginImage from \"../../Images/login-screen.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { doloadGlobalTitle } from \"../../Components/AppHeader/action\";\r\nimport { doLoginAction } from \"./Action\";\r\nimport axios from \"../Helpers/apiClient\";\r\nimport { SERVER_ADDRESS } from \"../../Services/Config\";\r\nimport { Formik } from \"formik\";\r\nimport '../../../node_modules/sweetalert2/dist/sweetalert2.all'\r\nimport {\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  CloseButton\r\n} from '@chakra-ui/react'\r\nimport { useMediaQuery } from '@chakra-ui/react'\r\n\r\nconst Login = () => {\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)');\r\n\r\n  return (\r\n    <Flex h=\"100vh\" w=\"100vw\" justifyContent=\"space-evenly\" alignItems=\"center\" flexFlow={isLessThan700 ? \"column\" : \"\"}>\r\n      <Flex w={isLessThan700 ? \"70%\" :\"30%\"} h={isLessThan700 ? \"40%\" :\"50%\"} p=\"1%\">\r\n        <Image src={loginImage} height={\"100%\"} width={\"100%\"} />\r\n      </Flex>\r\n      <Flex w={isLessThan700 ? \"100%\" :\"30%\"} h=\"50%\" p=\"1%\">\r\n        <LoginForm />\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nconst LoginForm = (props) => {\r\n  const [loding, setLoding] = useState(false);\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)');\r\n\r\n  const [statusmessage, setstatusMessage] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false)\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const forgotPassword = () => {\r\n    history.push(\"/forgot\");\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      flex={1}\r\n      textAlign=\"left\"\r\n      pt=\"50px\"\r\n      flexDir=\"column\"\r\n      p=\"5px\"\r\n      justifyContent=\"center\"\r\n      minW=\"50%\">\r\n      {showAlert ? <Stack spacing={3} w={400} position=\"absolute\" top=\"140px\" >\r\n\r\n        {\r\n          statusmessage.map((msg) => (\r\n            <Alert id=\"alertbox\" >\r\n              <AlertIcon />\r\n              <AlertTitle mr={2}>Please</AlertTitle>\r\n              <AlertDescription>{msg.message}</AlertDescription>\r\n              <CloseButton position='absolute' right='8px' top='8px' />\r\n            </Alert>\r\n\r\n          ))\r\n\r\n        }\r\n      </Stack>\r\n        :\r\n        null\r\n      }\r\n\r\n      <Heading as=\"h4\" size=\"xl\" bgGradient={primaryLoginC} bgClip=\"text\">\r\n        Login\r\n      </Heading>\r\n      <Text fontSize={16}  bgGradient={primaryLoginC} bgClip=\"text\">\r\n        MASTER ADMIN CONSOLE\r\n      </Text>\r\n      <br />\r\n      <p id=\"ptag\"></p>\r\n\r\n\r\n\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n        }}\r\n        onSubmit={(values) => {\r\n          let url = SERVER_ADDRESS + \"/api/v1/user/login\";\r\n          let temp = {\r\n            email: values.email,\r\n            password: values.password,\r\n          };\r\n          \r\n          try {\r\n            setLoding(true);\r\n            axios.post(url, temp).then(async (response) => {\r\n              if (response.status === 200) {\r\n                await localStorage.setItem(\r\n                  \"userData\",\r\n                  JSON.stringify({\r\n                    user: { ...response.data.data },\r\n\r\n                  })\r\n                );\r\n                await dispatch(doLoginAction(response.data.data))\r\n                await dispatch(doloadGlobalTitle(\"Dashboard\"));\r\n                setLoding(false);\r\n\r\n                history.push(\"/dashboard\");\r\n\r\n              }\r\n              else {\r\n                var res = response.data.data\r\n                console.log(res)\r\n                setstatusMessage(response.data.data)\r\n                setShowAlert(true);\r\n                setTimeout(() => {\r\n                  setShowAlert(false)\r\n                }, 2500);\r\n                setLoding(false);\r\n                \r\n              }\r\n\r\n            });\r\n          } catch (error) {\r\n            console.log(\"Try and Catch Error\", error);\r\n          }\r\n        }}>\r\n        \r\n        {({ handleChange, handleSubmit, values }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Stack >\r\n\r\n              <INPUT\r\n                label=\"USER ID\"\r\n                autoFocus={true}\r\n                onChange={handleChange}\r\n                value={values.email}\r\n                name=\"email\"\r\n                type=\"email\"\r\n                required={true}\r\n                \r\n              />\r\n              <br />\r\n              <INPUT\r\n                label=\"PASSWORD\"\r\n                onChange={handleChange}\r\n                value={values.password}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                required={true}\r\n              />\r\n              <Text\r\n                textAlign=\"right\"\r\n                onClick={forgotPassword}\r\n                cursor=\"pointer\"\r\n                _hover={{\r\n                  color: \"blue\",\r\n                }}>\r\n                forgot password?\r\n              </Text>\r\n              <br />\r\n              <Button\r\n                isLoading={loding}\r\n                loadingText=\"Loging in...\"\r\n                bgGradient={primaryLoginC}\r\n                type=\"submit\"\r\n                color=\"#fff\"\r\n              >\r\n                Login\r\n\r\n              </Button>\r\n            </Stack>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Dashboard\\index.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Messanger\\index.js",["496"],"import {\r\n  Box,\r\n  Flex,\r\n  IconButton,\r\n  Input,\r\n  Stack,\r\n  Tab,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Tabs,\r\n  Text,\r\n  Textarea,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { ArrowForwardIcon, AttachmentIcon } from \"@chakra-ui/icons\";\r\nimport { useMediaQuery } from '@chakra-ui/react'\r\n\r\nfunction Messanger() {\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const tabs = [\"INBOX\", \"COMPOSE\", \"SENT\"];\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)');\r\n  return (\r\n    <Tabs\r\n      isLazy\r\n      onChange={(index) => {\r\n        setTabIndex(index);\r\n      }}>\r\n      <TabList position=\"sticky\" top={\"55px\"} w=\"100%\" bg=\"white\" zIndex={5}>\r\n        {tabs.map((tab, index) => (\r\n          <Tab fontSize={isLessThan700 ? \"13px\" : \"\"} m=\"1px\" _focus={{ boxShadow: \"none\" }}>\r\n            {tab}\r\n          </Tab>\r\n        ))}\r\n      </TabList>\r\n      <TabPanels>\r\n        <TabPanel>\r\n          <p>INBOX</p>\r\n        </TabPanel>\r\n\r\n        <TabPanel p=\"40px\">\r\n          <Compose />\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <p>SENT</p>\r\n        </TabPanel>\r\n      </TabPanels>\r\n    </Tabs>\r\n  );\r\n}\r\n\r\nconst Compose = () => {\r\n  return (\r\n    <Box>\r\n      <Stack spacing={3}>\r\n        <Input placeholder=\"TO:\" size=\"md\" />\r\n        <Input placeholder=\"SUBJECT:\" size=\"lg\" />\r\n        <Box>\r\n        <Textarea\r\n        //   placeholder=\"Here is a sample placeholder\"\r\n          size=\"lg\"\r\n          border=\"2px\"\r\n          borderBottom=\"0px\"\r\n          borderBottomLeftRadius=\"0px\"\r\n          borderBottomRightRadius=\"0px\"\r\n\r\n          style={{ height: \"400px\" }}\r\n        />\r\n        <Flex justifyContent=\"space-between\" border=\"1px\" borderColor=\"darkgrey\" p=\"10px\" borderRadius=\"5px\">\r\n        <BottomTools icon={<ArrowForwardIcon/>} title=\"SEND\" w=\"5%\"/>\r\n        <BottomTools icon={<AttachmentIcon />}  title=\"ATTACHMENT\" w=\"9%\"/>\r\n         \r\n        </Flex>\r\n        </Box>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst BottomTools = ({icon,title,w}) => {\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)')\r\n\r\n  return (\r\n    <Flex  alignItems=\"center\"  w={isLessThan700 ? \"140px\" : `${w}`} justifyContent={isLessThan700 ?\"\" : \"space-evenly\"} >\r\n    <IconButton\r\n        fontSize={isLessThan700 ? \"11px\" : \"20px\"}\r\n        icon={icon}\r\n      />\r\n      \r\n      <Text fontSize={isLessThan700 ? \"12px\" : \"\"}>{title}</Text>\r\n     \r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Messanger;\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\LabOnboarding\\index.js",["497","498","499","500","501","502","503"],"import { Box, Radio, RadioGroup, Flex, Stack, Text, Heading, Table, Thead, Tr, Th, Tbody, Td, Image } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport INPUT from '../../Components/itextInput';\r\nimport ButtonX from '../../Components/button.js'\r\nimport { appThemeColor, textColor } from '../../Theme';\r\nimport MediledgeFullLogo from \"../../Images/side-bar-icons/medLogo.png\";\r\nimport { useMediaQuery } from '@chakra-ui/react'\r\n\r\n\r\nfunction LabOnboarding() {\r\n  return (\r\n    <Box bg='red' h='100vh'>\r\n      <WelcomeFormModal />\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst WelcomeFormModal = () => {\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)')\r\n\r\n  return (\r\n    <Box\r\n      p=\"3%\"\r\n      h=\"100vh\"\r\n      w=\"100vw\"\r\n      position=\"fixed\"\r\n      bg=\"white\"\r\n      top={0}\r\n      left={0}\r\n      zIndex={1200}\r\n      overflow=\"auto\"\r\n    >\r\n      <Flex justifyContent=\"space-evenly\" flexFlow={isLessThan700 ? \"column\" :\"\"}>\r\n        <Box flex={1} >\r\n          <Image src={MediledgeFullLogo} />\r\n        </Box>\r\n        <Stack flex={5} mt={isLessThan700 ? \"10px\" : \"\"} >\r\n          <Heading size=\"lg\" fontWeight={600} textAlign=\"center\" color={textColor.appGreyText}>Lab Onboarding Form</Heading>\r\n        </Stack>\r\n\r\n\r\n      </Flex>\r\n      <br />\r\n      <Stack borderRadius=\"5px\">\r\n        <Flex margin=\"auto\" w={isLessThan700 ?'100%' : \"80%\"} padding=\"0px\">\r\n          <Stack spacing=\"40px\" flex={.5} p=\"10px\" borderRight=\"2px\" borderColor='gray.200'>\r\n            <INPUT\r\n              label=\"LABORATORY NAME\"\r\n              autoFocus={true}\r\n              name=\"username\"\r\n              type=\"username\"\r\n              required={true}\r\n              shadow=\"dark-lg\"\r\n            // style={{width:300}}\r\n            />\r\n            <Box >\r\n              <Heading size=\"sm\" textAlign=\"left\" marginBottom={5} color={textColor.appGreyText} fontSize={isLessThan700 ? \"13px\":\"\"}>NABL ACCREDITED</Heading>\r\n\r\n              <RadioButton buttonOne=\"YES\" buttonTwo=\"NO\" />\r\n            </Box>\r\n            <INPUT\r\n              label=\"LAB ID\"\r\n              autoFocus={true}\r\n              name=\"username\"\r\n              type=\"username\"\r\n              required={true}\r\n            // style={{width:300}}\r\n            />\r\n            <INPUT\r\n              label=\"CERTIFICATE No.\"\r\n              autoFocus={true}\r\n              name=\"username\"\r\n              type=\"username\"\r\n              required={true}\r\n            // style={{width:300}}\r\n            />\r\n            <INPUT\r\n              label=\"LAB TYPE\"\r\n              autoFocus={true}\r\n              name=\"username\"\r\n              type=\"username\"\r\n              required={true}\r\n            // style={{width:300}}\r\n            />\r\n\r\n          </Stack>\r\n\r\n          <Box h='10%' borderTopWidth={2} />\r\n\r\n          <Stack spacing=\"20px\" flex={1} p=\"10px\">\r\n            <Text color={textColor.appGreyText} textAlign=\"left\" fontWeight={600}>\r\n              ADDRESS\r\n            </Text>\r\n            <Box borderTopWidth={2} />\r\n            <Stack\r\n              shadow=\"sm\"\r\n              // p=\"10px\"\r\n              spacing=\"12px\"\r\n              borderRadius=\"5px\">\r\n              <INPUT\r\n                label=\"ADDRESS LINE 1\"\r\n                autoFocus={true}\r\n                name=\"username\"\r\n                type=\"username\"\r\n                required={true}\r\n                style={{ marginBottom: \".7rem\"}}\r\n              />\r\n              <INPUT\r\n                label=\"ADDRESS LINE 2\"\r\n                autoFocus={true}\r\n                name=\"username\"\r\n                type=\"username\"\r\n                required={true}\r\n                style={{ marginBottom: \".7rem\" }}\r\n              />\r\n              <INPUT\r\n                label=\"ADDRESS LINE 3\"\r\n                autoFocus={true}\r\n                name=\"username\"\r\n                type=\"username\"\r\n                required={true}\r\n                style={{ marginBottom: \".7rem\" }}\r\n              />\r\n              <INPUT\r\n                label=\"CITY / TOWN\"\r\n                autoFocus={true}\r\n                name=\"username\"\r\n                type=\"username\"\r\n                required={true}\r\n                style={{ marginBottom: \".7rem\" }}\r\n              />\r\n              <INPUT\r\n                label=\"STATE\"\r\n                autoFocus={true}\r\n                name=\"username\"\r\n                type=\"username\"\r\n                required={true}\r\n                style={{ marginBottom: \".7rem\" }}\r\n              />\r\n              <INPUT\r\n                label=\"COUNTRY\"\r\n                autoFocus={true}\r\n                name=\"username\"\r\n                type=\"username\"\r\n                required={true}\r\n                style={{ marginBottom: \".7rem\" }}\r\n              />\r\n              <INPUT\r\n                label=\"ZIP CODE\"\r\n                autoFocus={true}\r\n                name=\"username\"\r\n                type=\"username\"\r\n                required={true}\r\n              />\r\n            </Stack>\r\n          </Stack>\r\n        </Flex>\r\n      </Stack>\r\n      <ButtonX title=\"SUBMIT\" w={isLessThan700 ?\"20%\" :\"10%\"} position=\"absolute\" left={isLessThan700 ?\"270\" : \"1110\"} />\r\n\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst RadioButton = ({ buttonOne, buttonTwo }) => {\r\n  return (\r\n    <RadioGroup\r\n      spacing=\"50px\"\r\n      borderRadius=\"5px\"\r\n      border=\"1px solid #C0C0C0\"\r\n      p=\"5px\"\r\n      h=\"55px\"\r\n      defaultValue=\"2\">\r\n      <Stack justifyContent=\"space-evenly\" spacing={5} direction=\"row\" marginTop={3}>\r\n        <Radio colorScheme=\"red\" value=\"1\">\r\n          {buttonOne}\r\n        </Radio>\r\n        <Radio colorScheme=\"green\" value=\"2\">\r\n          {buttonTwo}\r\n        </Radio>\r\n      </Stack>\r\n    </RadioGroup>\r\n  );\r\n};\r\n\r\n\r\nexport default LabOnboarding\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Patient-Leaflet\\index.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\MrOnboarding\\index.js",["504","505","506","507","508","509","510","511","512"],"import {\r\n  Box,\r\n  Stack,\r\n  Heading,\r\n  Button,\r\n  Tabs,\r\n  TabList,\r\n  Tab,\r\n  TabPanel,\r\n  TabPanels,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState,useCallback, useRef,useEffect } from \"react\";\r\nimport INPUT from \"../../Components/login-input\";\r\nimport { useFormik } from \"formik\";\r\nimport { primaryLoginC } from \"../../Theme\";\r\nimport { OPDConsultData, mrStatusHeader } from \"../../assests\";\r\nimport { TableCell, TableRow } from \"@material-ui/core\";\r\nimport HospitalTable from \"../../Components/Tables/HospitalTable/HospitalTable\";\r\nimport ActionButton from \"../../Components/PopOver-Action-Buton\";\r\nimport { useMediaQuery } from '@chakra-ui/react'\r\nimport { Select } from '@chakra-ui/react'\r\nimport { SERVER_ADDRESS } from \"../../Services/Config\";\r\nimport axios from \"../Helpers/apiClient\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"../../../node_modules/react-image-crop/dist/ReactCrop\";\r\nimport ImageCrop from '../../Components/ImageCrop'\r\nconst leftTitle = \"NEW MR ONBOARDING FORM\";\r\nconst rightTitle = \"MR BOARDING LINK SHARE\";\r\n\r\nconst MrOnboarding = () => {\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const tabs = [\"NEW MR ONBOARDING\", \"STATUS\"];\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)');\r\n\r\n  return (\r\n    <Tabs\r\n      isLazy\r\n     \r\n      onChange={(index) => {\r\n        setTabIndex(index);\r\n       \r\n      }}>\r\n      <TabList  position=\"sticky\"\r\n      top={\"55px\"} w=\"100%\" bg=\"white\" zIndex={5}>\r\n        {tabs.map((tab, index) => (\r\n          <Tab fontSize={isLessThan700 ?\"13px\" : \"\"} m=\"1px\" _focus={{ boxShadow: \"none\" }}>\r\n            {tab}\r\n          </Tab>\r\n        ))}\r\n      </TabList>\r\n      <TabPanels >\r\n        <TabPanel >\r\n          <NewMrOnboarding />\r\n          {/* <MrOnboardingLink /> */}\r\n        </TabPanel>\r\n\r\n        <TabPanel h=\"500px\" overflow=\"auto\"   >\r\n        <StatusTable/>\r\n        </TabPanel>\r\n      </TabPanels>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nconst NewMrOnboarding = () => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { handleChange, values, handleSubmit, setFieldValue } = useFormik({\r\n    initialValues: {\r\n      state: \"\",\r\n      city: \"\",\r\n      name: \"\",\r\n      company: \"\",\r\n      contact: \"\",\r\n      email: \"\",\r\n      addressline1: \"\",\r\n      addressline2:\"\",\r\n      locality:\"\",\r\n      zipcode:\"\"\r\n\r\n    },\r\n    onSubmit: (values) => {\r\n      let url = `${SERVER_ADDRESS}/api/v1/hospital/on-board-hospital`;\r\n      let temp = {\r\n        city: values.city,\r\n        state: values.state,\r\n        name: values.name,\r\n        contact: values.contact,\r\n        email: values.email,\r\n        addressline1: values.addressline1,\r\n        addressline2: values.addressline2,\r\n        locality: values.locality,\r\n        zipcode: values.zipcode\r\n      };\r\n      console.log(temp, \"temp\");\r\n      setLoading(true)\r\n      try {\r\n        axios\r\n          .post(url, temp)\r\n          .then(async (response) => {\r\n            if (response.status === 200) {\r\n              setLoading(false)\r\n              alert(response.data.message);\r\n\r\n            }\r\n            setLoading(false)\r\n            alert(response.data.message);\r\n          })\r\n          .catch((error) => {\r\n            setLoading(false)\r\n            console.log(error, \"error\");\r\n\r\n          });\r\n      } catch (error) {\r\n        setLoading(false)\r\n        console.log(\"Try and Catch Error\", error);\r\n      }\r\n\r\n    },\r\n  });\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)');\r\n\r\n\r\n  return (\r\n    <Box flex={3} p=\"20px\" boxShadow=\"dark-lg\" m=\"5px\" borderRadius=\"10px\">\r\n      <HeadingX title={leftTitle} size={isLessThan700 ? \"sm\" :\"md\"} />\r\n      <br />\r\n      <br />\r\n      <form onSubmit={handleSubmit}>\r\n        <Stack > \r\n          <Stack pl={isLessThan700 ? \"\":\"33%\"} pr={isLessThan700 ? \"\":\"33%\"} width={isLessThan700 ? \"220px\" : \"\"}>\r\n            {/* <INPUT label=\"STATE\" name=\"state\" type=\"state\" width={isLessThan700 ? \"220px\" :\"\" }   required /> */}\r\n            <Select placeholder='State'onChange={handleChange}>\r\n                    <option value='option1'>Gujarat</option>\r\n                    <option value='option2'>Haryana</option>\r\n                    <option value='option3'>Punjab</option>\r\n                    <option value='option2'>Haryana</option>\r\n                    <option value='option3'>Punjab</option>\r\n                    <option value='option2'>Haryana</option>\r\n                    <option value='option3'>Punjab</option>\r\n                    <option value='option2'>Haryana</option>\r\n                    <option value='option3'>Punjab</option>\r\n                    <option value='option2'>Haryana</option>\r\n                    <option value='option3'>Punjab</option>\r\n                  </Select>\r\n            <br />\r\n            {/* <INPUT label=\"CITY\" name=\"city\" type=\"city\"  required /> */}\r\n            <Select placeholder='City' onChange={handleChange}>\r\n                    <option value='option1'>mohali</option>\r\n                    <option value='option2'>chandigarh</option>\r\n                    <option value='option3'>Gurgaon</option>\r\n                    <option value='option2'>Faridabad</option>\r\n                    <option value='option3'>Pune</option>\r\n                    <option value='option2'>Kasol</option>\r\n                    <option value='option3'>Ahmdabad</option>\r\n                    <option value='option2'>Haryana</option>\r\n                    <option value='option3'>Punjab</option>\r\n                    <option value='option2'>Haryana</option>\r\n                    <option value='option3'>Punjab</option>\r\n                  </Select>\r\n\r\n            <br />\r\n            \r\n            <INPUT label=\"NAME\" name=\"name\" type=\"name\"  required />\r\n            <br />\r\n            <INPUT label=\"COMPANY\" name=\"company\" type=\"company\"  required />\r\n            <br />\r\n            <INPUT label=\"CONTACT\" name=\"contact\" type=\"contact\"  required />\r\n            <br />\r\n            <INPUT label=\"E-MAIL\" name=\"email\" type=\"email\"  required />\r\n            <br />\r\n            {/* <INPUT label=\"PHOTO\" name=\"photo\" type=\"file\"  required /> */}\r\n              <ImageCrop/>\r\n            <br />\r\n            <INPUT label=\"ADDRESS LINE 1\" name=\"addressline1\" type=\"address\" required />\r\n            <br />\r\n            <INPUT label=\"ADDRESS LINE 2\" name=\"addressline2\" type=\"address\" required />\r\n            <br />\r\n            <INPUT label=\"LOCALITY\" name=\"locality\" type=\"text\" required />\r\n            <br />\r\n            <INPUT label=\"PIN CODE\" name=\"zipcode\" type=\"number\" required />\r\n            <br />\r\n\r\n          </Stack>\r\n          <Button\r\n            isLoading={false}\r\n            loadingText=\"Uploading...\"\r\n            bgGradient={primaryLoginC}\r\n            type=\"submit\"\r\n            color=\"#fff\">\r\n            UPLOAD FOR APPROVAL\r\n          </Button>\r\n        </Stack>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\nconst MrOnboardingLink = () => {\r\n  const { handleChange, values, handleSubmit, setFieldValue } = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      contact: \"\",\r\n    },\r\n    onSubmit: (values) => {},\r\n  });\r\n  return (\r\n    <Box flex={1} p=\"20px\" boxShadow=\"dark-lg\" m=\"5px\" borderRadius=\"10px\">\r\n      <HeadingX title={rightTitle} size=\"sm\" />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <form onSubmit={handleSubmit}>\r\n        <Stack>\r\n          <Stack pl=\"30px\" pr=\"30px\">\r\n            <br />\r\n            <INPUT label=\"NAME\" name=\"name\" type=\"name\" required />\r\n            <br />\r\n            <INPUT label=\"E-MAIL\" name=\"email\" type=\"email\" required />\r\n            <br />\r\n            <INPUT label=\"CONTACT\" name=\"contact\" type=\"contact\" required />\r\n\r\n            <br />\r\n          </Stack>\r\n          <Button\r\n            isLoading={false}\r\n            loadingText=\"Sharing...\"\r\n            bgGradient={primaryLoginC}\r\n            type=\"submit\"\r\n            color=\"#fff\">\r\n            SHARE THE LINK\r\n          </Button>\r\n        </Stack>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst HeadingX = ({ title, size }) => {\r\n  return (\r\n    <Heading size={size} textAlign=\"center\">\r\n      {title}\r\n    </Heading>\r\n  );\r\n};\r\n\r\n\r\nconst StatusTable = () => {\r\n  return(\r\n    <HospitalTable header={mrStatusHeader}>\r\n      {OPDConsultData.map((item) => {\r\n        return (\r\n          <TableRow>\r\n            <TableCell>{item.date}</TableCell>\r\n            <TableCell>{item.time}</TableCell>\r\n            <TableCell>{item.doctor}</TableCell>\r\n            <TableCell >{item.dept}</TableCell>\r\n            <ActionButton actionStatus={item.status} />\r\n          </TableRow>\r\n        );\r\n      })}\r\n    </HospitalTable>\r\n\r\n  )\r\n}\r\n\r\nfunction Photo() {\r\n  const [upImg, setUpImg] = useState();\r\n  const imgRef = useRef(null);\r\n  const previewCanvasRef = useRef(null);\r\n  const [crop, setCrop] = useState({ unit: \"%\", width: 30, aspect: 16 / 9 });\r\n  const [completedCrop, setCompletedCrop] = useState(null);\r\n\r\n  const onSelectFile = (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => setUpImg(reader.result));\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onLoad = useCallback((img) => {\r\n    imgRef.current = img;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\r\n      return;\r\n    }\r\n\r\n    const image = imgRef.current;\r\n    const canvas = previewCanvasRef.current;\r\n    const crop = completedCrop;\r\n\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const pixelRatio = window.devicePixelRatio;\r\n\r\n    canvas.width = crop.width * pixelRatio * scaleX;\r\n    canvas.height = crop.height * pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = \"high\";\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY\r\n    );\r\n  }, [completedCrop]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <input type=\"file\" accept=\"image/*\" onChange={onSelectFile} />\r\n      </div>\r\n      <ReactCrop\r\n        src={upImg}\r\n        onImageLoaded={onLoad}\r\n        crop={crop}\r\n        onChange={(c) => setCrop(c)}\r\n        onComplete={(c) => setCompletedCrop(c)}\r\n      />\r\n      <div>\r\n        <canvas\r\n          ref={previewCanvasRef}\r\n          // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\r\n          style={{\r\n            width: Math.round(completedCrop?.width ?? 0),\r\n            height: Math.round(completedCrop?.height ?? 0)\r\n          }}\r\n        />\r\n      </div>\r\n      <p>\r\n        Note that the download below won't work in this sandbox due to the\r\n        iframe missing 'allow-downloads'. It's just for your reference.\r\n      </p>\r\n      <button\r\n        type=\"select\"\r\n        disabled={!completedCrop?.width || !completedCrop?.height}\r\n        // onClick={() =>\r\n        //   generateDownload(previewCanvasRef.current, completedCrop)\r\n        // }\r\n      >\r\n        Download cropped image\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default MrOnboarding;\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Webvitals\\index.js",["513","514","515","516","517"],"import {\r\n    Box,\r\n    Stack,\r\n    Button,\r\n  } from \"@chakra-ui/react\";\r\n  import React, { useState } from \"react\";\r\n  import { useMediaQuery } from '@chakra-ui/react'\r\nimport { Select } from '@chakra-ui/react'\r\nimport { SERVER_ADDRESS } from \"../../Services/Config\";\r\nimport axios from \"../Helpers/apiClient\";\r\nimport INPUT from \"../../Components/login-input\";\r\nimport { useFormik } from \"formik\";\r\nimport { primaryLoginC } from \"../../Theme\";\r\nimport { Heading } from '@chakra-ui/react'\r\nconst Webvitals = () => {\r\n    const [loading, setLoading] = useState(false);\r\n  \r\n    const { handleChange, values, handleSubmit, setFieldValue } = useFormik({\r\n      initialValues: {\r\n        state: \"\",\r\n        city: \"\",\r\n        name: \"\",\r\n        company: \"\",\r\n        contact: \"\",\r\n        email: \"\",\r\n        addressline1: \"\",\r\n        addressline2:\"\",\r\n        locality:\"\",\r\n        zipcode:\"\"\r\n  \r\n      },\r\n      onSubmit: (values) => {\r\n        let url = `${SERVER_ADDRESS}/api/v1/hospital/on-board-hospital`;\r\n        let temp = {\r\n          city: values.city,\r\n          state: values.state,\r\n          name: values.name,\r\n          contact: values.contact,\r\n          email: values.email,\r\n          addressline1: values.addressline1,\r\n          addressline2: values.addressline2,\r\n          locality: values.locality,\r\n          zipcode: values.zipcode\r\n        };\r\n        console.log(temp, \"temp\");\r\n        setLoading(true)\r\n        try {\r\n          axios\r\n            .post(url, temp)\r\n            .then(async (response) => {\r\n              if (response.status === 200) {\r\n                setLoading(false)\r\n                alert(response.data.message);\r\n  \r\n              }\r\n              setLoading(false)\r\n              alert(response.data.message);\r\n            })\r\n            .catch((error) => {\r\n              setLoading(false)\r\n              console.log(error, \"error\");\r\n  \r\n            });\r\n        } catch (error) {\r\n          setLoading(false)\r\n          console.log(\"Try and Catch Error\", error);\r\n        }\r\n  \r\n      },\r\n    });\r\n    const [isLessThan700] = useMediaQuery('(max-width: 700px)');\r\n  \r\n  \r\n    return (\r\n      <Box flex={3} p=\"20px\"  m=\"5px\" borderRadius=\"10px\">\r\n        {/* <HeadingX title={leftTitle} size={isLessThan700 ? \"sm\" :\"md\"} /> */}\r\n        <Heading size=\"lg\" textAlign=\"center\">Enter Vitals here...</Heading>\r\n        <br />\r\n        <br />\r\n        <form onSubmit={handleSubmit}>\r\n          <Stack > \r\n            <Stack pl={isLessThan700 ? \"\":\"33%\"} pr={isLessThan700 ? \"\":\"33%\"} width={isLessThan700 ? \"220px\" : \"\"}>\r\n              <INPUT label=\"TEMP(F)\" name=\"temp\" type=\"text\"  required />\r\n              <br />\r\n              <INPUT label=\"SPO2 %\" name=\"spo2\" type=\"text\"  required />\r\n              <br />\r\n              <INPUT label=\"BP\" name=\"bp\" type=\"text\"  required />\r\n              <br />\r\n              <INPUT label=\"RBS\" name=\"rbs\" type=\"text\"  required />\r\n              <br />\r\n              <INPUT label=\"H/R\" name=\"hr\" type=\"text\"  required />\r\n              <br />\r\n              <INPUT label=\"R/R\" name=\"rr\" type=\"text\" required />\r\n              <br />\r\n              <Button\r\n              isLoading={false}\r\n              loadingText=\"Uploading...\"\r\n              bgGradient={primaryLoginC}\r\n              type=\"submit\"\r\n              color=\"#fff\">\r\n              SUBMIT\r\n            </Button>\r\n\r\n            </Stack>\r\n          </Stack>\r\n        </form>\r\n      </Box>\r\n    );\r\n  };\r\n  export default Webvitals;","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Onboarding\\index.js",["518","519","520"],"import {\r\n  Box,\r\n  Stack,\r\n  Heading,\r\n  Button,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  TabPanel,\r\n  Tab,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport INPUT from \"../../Components/login-input\";\r\nimport { useFormik } from \"formik\";\r\nimport { primaryLoginC } from \"../../Theme\";\r\nimport { onboardingStatusHeader, OPDConsultData } from \"../../assests\";\r\nimport { TableCell, TableRow } from \"@material-ui/core\";\r\nimport HospitalTable from \"../../Components/Tables/HospitalTable/HospitalTable\";\r\nimport ActionButton from \"../../Components/PopOver-Action-Buton\";\r\nimport { Formik } from \"formik\";\r\nimport axios from \"../Helpers/apiClient\";\r\nimport { SERVER_ADDRESS } from \"../../Services/Config\";\r\nimport { useMediaQuery } from '@chakra-ui/react'\r\nimport { Select } from '@chakra-ui/react'\r\n\r\nconst leftTitle = \"HOSPITAL PREMIUM ONBOARDING FORM\";\r\nconst rightTitle = \"FREEMIUM ONBOARDING FORM\";\r\n\r\nconst Onboarding = (props) => {\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const tabs = [\"NEW ONBOARDING\", \"STATUS\"];\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)')\r\n\r\n  return (\r\n    <Tabs\r\n      isLazy\r\n      onChange={(index) => {\r\n        setTabIndex(index);\r\n      }}>\r\n      <TabList position=\"sticky\" top={\"55px\"} w=\"100%\" bg=\"white\" zIndex={5}>\r\n        {tabs.map((tab, index) => (\r\n          <Tab fontSize={isLessThan700 ? \"13px\" : \"\"} m=\"1px\" _focus={{ boxShadow: \"none\" }}>\r\n            {tab}\r\n          </Tab>\r\n        ))}\r\n      </TabList>\r\n      <TabPanels>\r\n        <TabPanel>\r\n          <Premium />\r\n          {/* <Freemium /> */}\r\n        </TabPanel>\r\n\r\n        <TabPanel h=\"500px\" overflow=\"auto\">\r\n          <StatusTable />\r\n        </TabPanel>\r\n      </TabPanels>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nconst Premium = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)')\r\n\r\n\r\n  return (\r\n    <Box p=\"20px\" boxShadow=\"dark-lg\" m=\"auto\" borderRadius=\"10px\" width={isLessThan700 ? \"100%\" : \"60%\"}>\r\n      <Formik\r\n        initialValues={{\r\n          state: \"\",\r\n          city: \"\",\r\n          hospitalName: \"\",\r\n          type: \"\",\r\n          adminContact: \"\",\r\n          email: \"\",\r\n          hospitalContact: \"\",\r\n          ambulanceNumber: \"\"\r\n        }}\r\n        onSubmit={(values) => {\r\n          let url = `${SERVER_ADDRESS}/api/v1/hospital/on-board-hospital`;\r\n          let temp = {\r\n            city: values.city,\r\n            state: values.state,\r\n            email: values.email,\r\n            hospital_name: values.hospitalName,\r\n            type: values.type,\r\n            official_mobile_number: values.hospitalContact,\r\n            ambulance_number: values.ambulanceNumber,\r\n            mobile_number: values.adminContact\r\n          };\r\n          console.log(temp, \"temp\");\r\n          setLoading(true)\r\n          try {\r\n            axios\r\n              .post(url, temp)\r\n              .then(async (response) => {\r\n                if (response.status === 200) {\r\n                  setLoading(false)\r\n                  alert(response.data.message);\r\n\r\n                }\r\n                setLoading(false)\r\n                alert(response.data.message);\r\n              })\r\n              .catch((error) => {\r\n                setLoading(false)\r\n                console.log(error, \"error\");\r\n\r\n              });\r\n          } catch (error) {\r\n            setLoading(false)\r\n            console.log(\"Try and Catch Error\", error);\r\n          }\r\n        }}>\r\n        {({\r\n          handleChange,\r\n          handleSubmit,\r\n          values,\r\n          errors,\r\n          touched,\r\n          isSubmitting,\r\n        }) => (\r\n          <>\r\n            <HeadingX title={leftTitle} size={isLessThan700 ? \"sm\" : \"md\"} />\r\n            <br />\r\n            <br />\r\n            <form onSubmit={handleSubmit}>\r\n              <Stack >\r\n                <Stack width={isLessThan700 ? \"100%\" : \"50%\"} margin=\"0 auto\">\r\n                  {/* <INPUT\r\n                    label=\"STATE\"\r\n                    name=\"state\"\r\n                    type=\"state\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    value={values.state}\r\n                  /> */}\r\n                  <Select placeholder='State'onChange={handleChange}>\r\n                    <option value='option1'>Gujarat</option>\r\n                    <option value='option2'>Haryana</option>\r\n                    <option value='option3'>Punjab</option>\r\n                    <option value='option2'>Haryana</option>\r\n                    <option value='option3'>Punjab</option>\r\n                    <option value='option2'>Haryana</option>\r\n                    <option value='option3'>Punjab</option>\r\n                    <option value='option2'>Haryana</option>\r\n                    <option value='option3'>Punjab</option>\r\n                    <option value='option2'>Haryana</option>\r\n                    <option value='option3'>Punjab</option>\r\n                  </Select>\r\n                  <br />\r\n                  {/* <INPUT\r\n                    label=\"CITY\"\r\n                    name=\"city\"\r\n                    type=\"city\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    value={values.city}\r\n                  /> */}\r\n                    <Select placeholder='City' onChange={handleChange}>\r\n                    <option value='option1'>mohali</option>\r\n                    <option value='option2'>chandigarh</option>\r\n                    <option value='option3'>Gurgaon</option>\r\n                    <option value='option2'>Faridabad</option>\r\n                    <option value='option3'>Pune</option>\r\n                    <option value='option2'>Kasol</option>\r\n                    <option value='option3'>Ahmdabad</option>\r\n                    <option value='option2'>Haryana</option>\r\n                    <option value='option3'>Punjab</option>\r\n                    <option value='option2'>Haryana</option>\r\n                    <option value='option3'>Punjab</option>\r\n                  </Select>\r\n\r\n                  <br />\r\n                  <INPUT\r\n                    label=\"HOSPITAL NAME\"\r\n                    name=\"hospitalName\"\r\n                    type=\"hospitalName\"\r\n                    onChange={handleChange}\r\n                    value={values.hospitalName}\r\n                    required\r\n                  />\r\n                  <br />\r\n                  <INPUT\r\n                    label=\"TYPE\"\r\n                    name=\"type\"\r\n                    type=\"type\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    value={values.type}\r\n                  />\r\n\r\n                  <br />\r\n                  <INPUT\r\n                    label=\"EMAIL\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    value={values.email}\r\n                  />\r\n                  <br />\r\n                  <INPUT\r\n                    label=\"HOSPITAL CONTACT\"\r\n                    name=\"hospitalContact\"\r\n                    type=\"hospitalContact\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    value={values.hospitalContact}\r\n                  />\r\n                  <br />\r\n                  <INPUT\r\n                    label=\"ADMIN CONTACT\"\r\n                    name=\"adminContact\"\r\n                    type=\"adminContact\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    value={values.adminContact}\r\n                  />\r\n\r\n                  <br />\r\n                  <INPUT\r\n                    label=\"AMBULANCE NUMBER\"\r\n                    name=\"ambulanceNumber\"\r\n                    type=\"ambulanceNumber\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    value={values.ambulanceNumber}\r\n                  />\r\n                  <br />\r\n\r\n                </Stack>\r\n                <Button\r\n                  isLoading={loading}\r\n                  loadingText=\"Uploading...\"\r\n                  bgGradient={primaryLoginC}\r\n                  type=\"submit\"\r\n                  color=\"#fff\">\r\n                  UPLOAD FOR APPROVAL\r\n                </Button>\r\n\r\n              </Stack>\r\n            </form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Box>\r\n  );\r\n};\r\n// const Freemium = () => {\r\n//   const { handleChange, values, handleSubmit, setFieldValue } = useFormik({\r\n//     initialValues: {\r\n//       state: \"\",\r\n//       city: \"\",\r\n//       name: \"\",\r\n//       email: \"\",\r\n//       contact: \"\",\r\n//     },\r\n//     onSubmit: (values) => {},\r\n//   });\r\n//   return (\r\n//     <Box flex={1} p=\"20px\" boxShadow=\"dark-lg\" m=\"5px\" borderRadius=\"10px\">\r\n//       <HeadingX title={rightTitle} size=\"sm\" />\r\n//       <br />\r\n//       <br />\r\n//       <br />\r\n//       <br />\r\n//       <form onSubmit={handleSubmit}>\r\n//         <Stack>\r\n//           <Stack pl=\"30px\" pr=\"30px\">\r\n//             <INPUT label=\"STATE\" name=\"state\" type=\"state\" required />\r\n//             <br />\r\n//             <INPUT label=\"CITY\" name=\"city\" type=\"city\" required />\r\n//             <br />\r\n//             <INPUT label=\"NAME\" name=\"name\" type=\"name\" required />\r\n//             <br />\r\n//             <INPUT label=\"E-MAIL\" name=\"email\" type=\"email\" required />\r\n//             <br />\r\n//             <INPUT label=\"CONTACT\" name=\"contact\" type=\"contact\" required />\r\n\r\n//             <br />\r\n//           </Stack>\r\n//           <Button\r\n//             isLoading={false}\r\n//             loadingText=\"Sharing...\"\r\n//             bgGradient={primaryLoginC}\r\n//             type=\"submit\"\r\n//             color=\"#fff\">\r\n//             SHARE THE LINK\r\n//           </Button>\r\n//         </Stack>\r\n//       </form>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\nconst HeadingX = ({ title, size }) => {\r\n  return (\r\n    <Heading size={size} textAlign=\"center\">\r\n      {title}\r\n    </Heading>\r\n  );\r\n};\r\n\r\nconst StatusTable = () => {\r\n  return (\r\n    <HospitalTable header={onboardingStatusHeader}>\r\n      {OPDConsultData.map((item) => {\r\n        return (\r\n          <TableRow>\r\n            <TableCell>{item.date}</TableCell>\r\n            <TableCell>{item.time}</TableCell>\r\n            <TableCell>{item.doctor}</TableCell>\r\n            <TableCell>{item.dept}</TableCell>\r\n            <TableCell>{item.appointmentId}</TableCell>\r\n            <ActionButton actionStatus={item.status} />\r\n          </TableRow>\r\n        );\r\n      })}\r\n    </HospitalTable>\r\n  );\r\n};\r\n\r\nexport default Onboarding;\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Patient-Information\\index.js",["521","522","523","524","525","526","527"],"import {\r\n  Box,\r\n  Container,\r\n  Heading,\r\n  Text,\r\n  Stack,\r\n  Button,\r\n  Flex,\r\n  Image,\r\n  Divider,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport INPUT from \"../../Components/login-input\";\r\nimport { primaryLoginC } from \"../../Theme\";\r\nimport { useFormik } from \"formik\";\r\nimport PatientCard from \"../../Components/PatientCard\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMediaQuery } from '@chakra-ui/react'\r\n\r\nconst PatientInformation = () => {\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)')\r\n\r\n  return (\r\n    <Flex h=\"90%\" p=\"20px\" alignItems=\"center\" justifyContent=\"space-between\" flexFlow={isLessThan700 ? \"column\" : \"\"}>\r\n      <PatientSearchCard />\r\n      <PatientInfoCard />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nconst PatientSearchCard = () => {\r\n  const { handleChange, values, handleSubmit, setFieldValue } = useFormik({\r\n    initialValues: {\r\n      uhid: \"\",\r\n      aadhaar: \"\",\r\n      contact: \"\",\r\n      email: \"\",\r\n    },\r\n    onSubmit: (values) => {},\r\n  });\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)')\r\n\r\n  return (\r\n    <Box flex={1}>\r\n      <form onSubmit={handleSubmit}>\r\n        <Stack borderRadius={isLessThan700 ?\"10px\" : \"30\"}  p=\"15px\" boxShadow=\"dark-lg\" width={isLessThan700 ?\"300px\" : \"\"} mb={isLessThan700 ? \"20px\" : \"\"}>\r\n          <Heading size=\"md\" mt=\"20px\" textAlign=\"center\">\r\n            SEARCH FOR PATIENT\r\n          </Heading>\r\n          <br />\r\n\r\n          <INPUT\r\n            label=\"UHID\"\r\n            name=\"uhid\"\r\n            autoFocus={true}\r\n            type=\"uhid\"\r\n            required\r\n          />\r\n          <TextX />\r\n          <INPUT label=\"AADHAAR\" name=\"aadhaar\" type=\"uhid\" required />\r\n          <TextX />\r\n          <INPUT label=\"CONTACT\" name=\"contact \" type=\"uhid\" required />\r\n          <TextX />\r\n          <INPUT label=\"E-MAIL\" name=\"email\" type=\"uhid\" required />\r\n          <br />\r\n          <Button\r\n            isLoading={false}\r\n            loadingText=\"Submitting...\"\r\n            bgGradient={primaryLoginC}\r\n            type=\"submit\"\r\n            color=\"#fff\">\r\n            SEARCH\r\n          </Button>\r\n          <br/>\r\n          <br/>\r\n        </Stack>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst PatientInfoCard = () => {\r\n  const history = useHistory();\r\n  const handlePatientleaf = () => {\r\n    history.push(\"/Patient-Leaflet\")\r\n   \r\n\r\n  }\r\n  \r\n  return (\r\n    <PatientCard onClick={handlePatientleaf} w=\"90%\"/>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst TextX = () => {\r\n  return (\r\n    <Text textAlign=\"center\" m=\"10px\">\r\n      OR\r\n    </Text>\r\n  );\r\n};\r\n\r\nexport default PatientInformation;\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\DashboardTabs.js",["528"],"import React from \"react\";\r\nimport {\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  Flex,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport { tabHeadingC } from \"../Theme\";\r\nimport { tabHeadingActiveC } from \"../Theme\";\r\nimport Consts from \"../Consts\";\r\nimport { useMediaQuery } from '@chakra-ui/react'\r\n\r\n\r\nconst Placeholders = Consts.topTabPlaceholders.dashboardTabs;\r\n\r\nconst DashboardHeaderTabs = ({tab1,tab2,tab3,tab4,tab5}) => {\r\n    const [isLessThan700] = useMediaQuery('(max-width: 700px)')\r\n\r\n  return (\r\n    <Tabs >\r\n      <Box position=\"fixed\" top={isLessThan700 ? \"50px\" : \"64px\"} w={isLessThan700 ? \"100%\" : \"100%\"} zIndex=\"20\" >\r\n        <TabList h=\"60px\" justifyContent=\"center\"  bg=\"white\" zIndex=\"10\">\r\n          {Placeholders.map((tab) => (\r\n            <Tab\r\n              _selected={{\r\n                fontWeight: \"bold\",\r\n                color: tabHeadingActiveC,\r\n                borderColor: tabHeadingActiveC,\r\n              }}\r\n              // fontSize={isLessThan700 ?\"11px\" : \"\"}\r\n              // fontWeight={isLessThan700 ?\"600\" : \"\"}\r\n              // width=\"50px\"\r\n              // marginRight=\"-10px\"\r\n              // marginLeft=\"-10px\"\r\n              color={tabHeadingC}\r\n              boxShadow=\"none !important\"\r\n              key={tab}>\r\n              {tab}\r\n            </Tab>\r\n          ))}\r\n        </TabList>\r\n      </Box>\r\n      <TabPanels mt=\"10\"  >\r\n        <TabPanel >\r\n          {tab1}\r\n        </TabPanel>\r\n        <TabPanel>\r\n        {tab2}\r\n        </TabPanel>\r\n        <TabPanel>\r\n        {tab3}\r\n        </TabPanel>\r\n        <TabPanel>\r\n        {tab4}\r\n        </TabPanel>\r\n        <TabPanel>\r\n        {tab5}\r\n        </TabPanel>\r\n      </TabPanels>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default DashboardHeaderTabs;\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Dashboard\\DashboardAnalyticsHospitalWise.js",["529"],"import { Box, Flex, Heading } from '@chakra-ui/react'\r\nimport { TableCell, TableRow } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { data, graphFulldata, hospitalDepttData, hospitalIpdData, hospitalOpdData, outstanding } from '../../assests'\r\nimport OpdGraph from '../../Components/OpdGraph/OpdGraph'\r\nimport PatientTable from '../../Components/Tables/PatientTable/PatientTable'\r\nimport TotalOutstanding from '../../Components/TotalOutstanding/TotalOutstanding'\r\nimport Consts from '../../Consts'\r\nimport { useMediaQuery } from '@chakra-ui/react'\r\n\r\nconst DashboardAnalyticsHospitalWise = () => {\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)')\r\n\r\n  return (\r\n    <Box >\r\n      <HospitalAnalyticsTopFlex />\r\n      <HospitalAnalyticsBottomFlex />\r\n    </Box>\r\n  )\r\n}\r\n\r\n\r\nconst HospitalAnalyticsBottomFlex = () => {\r\n  return (\r\n    <Box >\r\n      <HospitalBottomTable />\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst HospitalBottomTable = () => {\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)')\r\n\r\n  return (\r\n    <Box >\r\n      <Flex flex={1} flexFlow={isLessThan700 ? \"column\" : \"\"} >\r\n        <Box flex={2} boxShadow=\"dark-lg\" m=\"10px\" borderRadius=\"5px\" >\r\n          <Heading textAlign=\"center\" size=\"md\" p=\"5px\" fontSize={isLessThan700 ? \"14px\" : \"\"}> OPD DATA</Heading>\r\n          <PatientTable header={Consts.tableHeaders.hospitalOpdHeader} >\r\n            {hospitalOpdData.map((item, index) => (\r\n              <TableRow key={index} >\r\n                <TableCell style={{ fontWeight: \"bold\" , fontSize:\"13px\"}}>{item.doc}</TableCell>\r\n                <TableCell>{item.deptt}</TableCell>\r\n                <TableCell>{item.appont}</TableCell>\r\n                <TableCell>{item.viewed}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </PatientTable>\r\n        </Box>\r\n        <Box flex={3} boxShadow=\"dark-lg\" m=\"10px\" borderRadius=\"5px\">\r\n          <Heading textAlign=\"center\" size=\"md\" p=\"5px\" fontSize={isLessThan700 ? \"14px\" : \"\"}> IPD DATA</Heading>\r\n          <PatientTable header={Consts.tableHeaders.hospitalIpdheader}>\r\n            {hospitalIpdData.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell style={{ fontWeight: \"bold\", fontSize:\"13px\" }}>{item.doc}</TableCell>\r\n                <TableCell>{item.deptt}</TableCell>\r\n                <TableCell>{item.ipdward}</TableCell>\r\n                <TableCell>{item.icu}</TableCell>\r\n                <TableCell>{item.ot}</TableCell>\r\n                <TableCell>{item.er}</TableCell>\r\n                <TableCell>{item.other}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </PatientTable>\r\n        </Box>\r\n      </Flex>\r\n    </Box>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst HospitalAnalyticsTopFlex = () => {\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)')\r\n\r\n  return (\r\n    <Flex  flexFlow={isLessThan700 ? \"column\" : \"\"}>\r\n      <Box m=\"10px\"  >\r\n        <HospitalPatientData />\r\n      </Box>\r\n      <Box m=\"10px\"  >\r\n        <HospitalInfo />\r\n      </Box>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nconst HospitalPatientData = () => {\r\n  return (\r\n\r\n    <PatientTable header={Consts.tableHeaders.hospitalPatientTableHeader}>\r\n      {data.body.map((item, index) => (\r\n        <TableRow key={index}>\r\n          <TableCell style={{ fontWeight: \"bold\", fontSize: \"12px\" }}>{item.title}</TableCell>\r\n          <TableCell>{item.male}</TableCell>\r\n          <TableCell>{item.female}</TableCell>\r\n          <TableCell>{item.total}</TableCell>\r\n        </TableRow>\r\n      ))}\r\n    </PatientTable>\r\n  )\r\n\r\n}\r\n\r\nconst HospitalInfo = () => {\r\n    const [isLessThan700] = useMediaQuery('(max-width: 700px)')\r\n\r\n  return (\r\n    <Box textAlign=\"center\" >\r\n      <Heading p=\"5px\" size=\"sm\" fontSize={isLessThan700 ? \"13px\" : \"\"} width=\"250px\">HSPDDN001 CITY HEART CENTRE DEHRADUN UTTARAKHAND</Heading>\r\n      <Flex width=\"300px\" flexFlow={isLessThan700 ? \"column\" : \"\"}>\r\n        <Box width={isLessThan700 ?\"250px\" : \"\" }>\r\n          <HospitalDepartmentInfoTable />\r\n        </Box>\r\n        <Box ml=\"5px\" height=\"300px\">\r\n          <TotalOutstanding data={outstanding} size=\"sm\" RsSize=\"md\" />\r\n        </Box>\r\n        <Box ml=\"5px\" width={isLessThan700 ? \"250px\" : \"\"} mt={isLessThan700 ? \"20px\" : \"\"}>\r\n          <OpdGraph data={graphFulldata} height={40} width={80} />\r\n        </Box>\r\n\r\n      </Flex>\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst HospitalDepartmentInfoTable = () => {\r\n  return (\r\n    <PatientTable header={Consts.tableHeaders.hospitalDepartmentTableHeader}>\r\n      {hospitalDepttData.map((item, index) => (\r\n        <TableRow key={index}>\r\n          <TableCell style={{ fontWeight: \"bold\", fontSize:\"12px\" }}>{item.title}</TableCell>\r\n          <TableCell>{item.total}</TableCell>\r\n        </TableRow>\r\n      ))}\r\n    </PatientTable>\r\n\r\n  )\r\n}\r\n\r\nexport default DashboardAnalyticsHospitalWise\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\login-input.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Helpers\\apiClient.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Services\\Config.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\AppHeader\\header.js",["530","531"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  Drawer,\r\n  AppBar,\r\n  Toolbar,\r\n  List,\r\n  CssBaseline,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport { Image, Stack, Text } from \"@chakra-ui/react\";\r\nimport { primaryAppHeaderC } from \"../../Theme\";\r\nimport MediledgeIcon from \"../../Images/side-bar-icons/sidebarLogo.png\";\r\nimport MediledgeFullLogo from \"../../Images/side-bar-icons/medLogo.png\";\r\nimport { SideBarData } from \"../sideBarData\";\r\nimport { useHistory } from \"react-router\";\r\nimport { doLoginAction } from \"../../Screens/Login/Action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { doloadGlobalTitle } from \"./action\";\r\nimport { useMediaQuery } from '@chakra-ui/react'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    position: \"fixed\",\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  appBar: {\r\n    // zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    padding: theme.spacing(0, 8),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    padding: theme.spacing(0, 0),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    \r\n    \r\n   \r\n    background: primaryAppHeaderC,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    borderRadius: \"20px\",\r\n    marginLeft: \"5px\",\r\n    background: primaryAppHeaderC,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  toolbarOpen: {\r\n    padding: theme.spacing(1),\r\n    marginBottom: theme.spacing(0),\r\n\r\n    // necessary for content to be below app bar\r\n  },\r\n  toolbarBottom: {\r\n    marginTop: theme.spacing(5),\r\n  },\r\n  toolbarBottomInner: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  toolbarBottomInnerText: {\r\n    color: \"#fff\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(0),\r\n    overflow: \"scroll\",\r\n  },\r\n}));\r\n\r\nexport default function Header({ children }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [drawerState, setDrawerState] = React.useState(false);\r\n  const [clockIntervel, setClockintervel] = useState(moment().format(\"h:mm a\"));\r\n  const curentDate = moment().format(\"DD/MM/YYYY\");\r\n  const AppTitle = useSelector((s) => s.Title);\r\n  console.log(AppTitle, \"aaaaaaaaaaaaaaaaaaaaaaaaaaa\");\r\n\r\n  useEffect(() => {\r\n    let Timer = setInterval(() => {\r\n      setClockintervel(moment().format(\"h:mm a\"));\r\n    }, 1000);\r\n\r\n    return () => clearInterval(Timer);\r\n  }, []);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = async () => {\r\n    await setOpen(false);\r\n  };\r\n\r\n  const handleRouting = async (item) => {\r\n    if (item === \"Dashboard\") {\r\n      await dispatch(doloadGlobalTitle(item));\r\n      history.push(\"/dashboard\");\r\n    } else if (item === \"Onboarding\") {\r\n      await dispatch(doloadGlobalTitle(item));\r\n      history.push(\"/onboarding\");\r\n    } else if (item === \"MR Onboarding\") {\r\n      await dispatch(doloadGlobalTitle(item));\r\n      history.push(\"/mr-onboarding\");\r\n    } else if (item === \"Patient Information\") {\r\n      await dispatch(doloadGlobalTitle(item));\r\n      history.push(\"/patient-information\");\r\n    } else if (item === \"Messanger\") {\r\n      await dispatch(doloadGlobalTitle(item));\r\n      history.push(\"/messanger\");\r\n    }else if (item === \"Lab Onboarding\") {\r\n      await dispatch(doloadGlobalTitle(item));\r\n      history.push(\"/lab-onboarding\");\r\n    }else if (item === \"Webvitals\") {\r\n    await dispatch(doloadGlobalTitle(item));\r\n    history.push(\"/webvitals\");\r\n    }else if (item === \"Logout\") {\r\n      await localStorage.removeItem(\"userData\");\r\n      await dispatch(doLoginAction([]))\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)');\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        color=\"#fff\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}>\r\n        <Toolbar>\r\n          {/* <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n              \r\n            })}>\r\n            <EmailIcon />\r\n          </IconButton> */}\r\n\r\n          <Stack\r\n            direction={{ base: \"\", md: \"row\" }}\r\n            display={{ base: \"\", md: \"flex\" }}\r\n            width={{ base: \"auto\", md: \"auto\" }}\r\n            alignItems=\"center\"\r\n            flexGrow={1}\r\n            mt={{ base: 0, md: 0 }}>\r\n            <Text\r\n              letterSpacing={\"tighter\"}\r\n              bgGradient={primaryAppHeaderC}\r\n              bgClip=\"text\"\r\n                fontSize={isLessThan700 ? \"30px\" : \"40px\"}\r\n              >\r\n              {AppTitle}\r\n            </Text>\r\n            <Text>{\"\"}</Text>\r\n            <Text>{\"\"}</Text>\r\n            <Text display={isLessThan700 ? \"none\" :\"\"}>Welcome! ADMIN</Text>\r\n            <Text display={isLessThan700 ? \"none\" :\"\"}>|</Text>\r\n            <Text display={isLessThan700 ? \"none\" :\"\"}>{curentDate}</Text>\r\n            <Text display={isLessThan700 ? \"none\" :\"\"}>|</Text>\r\n            <Text display={isLessThan700 ? \"none\" :\"\"}>{clockIntervel}</Text>\r\n          </Stack>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n\r\n\r\n          \r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n        onMouseLeave={drawerState ? null : handleDrawerClose}\r\n        onMouseOver={() => handleDrawerOpen()}>\r\n        <div className={open ? classes.toolbarOpen : classes.toolbar}>\r\n          {/* <IconButton onClick={handleVariant} > */}\r\n          {\r\n            open ? (\r\n\r\n              <Image src={MediledgeFullLogo} />\r\n            ) : (\r\n              <Image src={MediledgeIcon} />\r\n            )\r\n            /* } */\r\n          }\r\n          {/* </IconButton> */}\r\n        </div>\r\n        {/* <Divider /> */}\r\n\r\n        {/* <Divider /> */}\r\n        <List className={classes.toolbarBottom}>\r\n          {SideBarData.map((item, index) => (\r\n            <ListItem\r\n              button\r\n              key={item.name}\r\n              className={classes.toolbarBottomInner}\r\n              onClick={() => handleRouting(item.name)}>\r\n              <ListItemIcon>\r\n                <Image src={item.icon} />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={item.name}\r\n                className={classes.toolbarBottomInnerText}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Reducer\\AppHeader-Reducer\\index.js",["532"],"import {DYNAMIC_TITLE_LOADED} from '../../Components/AppHeader/Types';\r\n\r\nexport default function (state = [], action) {\r\n  switch (action.type) {\r\n    case DYNAMIC_TITLE_LOADED:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Reducer\\Login-Reducer\\index.js",["533"],"import {LOGIN_SUCCESS} from '../../Screens/Login/Types';\r\n\r\nexport default function (state = [], action) {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Dashboard\\DashboardAnalytics.js",["534","535","536","537","538"],"import { Box, Flex } from \"@chakra-ui/layout\";\r\nimport React from \"react\";\r\nimport OpdGraph from \"../../Components/OpdGraph/OpdGraph\";\r\nimport HospitalTable from \"../../Components/Tables/HospitalTable/HospitalTable\";\r\nimport PatientTable from \"../../Components/Tables/PatientTable/PatientTable\";\r\nimport TotalOutstanding from \"../../Components/TotalOutstanding/TotalOutstanding\";\r\nimport { arr1, arr2, arr3, arr4, data } from \"../../assests\";\r\nimport { hospitalTable } from \"../../assests\";\r\nimport { outstanding } from \"../../assests\";\r\nimport { graphFulldata, columnData, header } from \"../../assests\";\r\nimport { TableCell, TableRow } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Consts from \"../../Consts\";\r\nimport { useMediaQuery } from '@chakra-ui/react'\r\n\r\nconst DashboardAnalytics = () => {\r\n\r\n  return (\r\n    <Box m=\"2\" >\r\n      <Flex direction=\"column\" >\r\n        <DashboardTopFlex />\r\n        <Box mt=\"3\" >\r\n          <DashboardBottomBox />\r\n        </Box>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst DashboardTopFlex = () => {\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)')\r\n\r\n  return (\r\n    <Flex flexFlow={isLessThan700 ? \"column \" : \"\"}>\r\n      <PatientAnalytics />\r\n      <TotalOutstanding data={outstanding} />\r\n      <Box maxHeight={isLessThan700 ? \"500px\" : \"\"}  marginTop={isLessThan700 ? \"10px\" : \"\"}>\r\n      <OpdGraph data={graphFulldata} height={30} width={100} />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nconst PatientAnalytics = () => {\r\n  return (\r\n    <PatientTable header={Consts.tableHeaders.hospitalPatientTableHeader} >\r\n      {data.body.map((item, index) => (\r\n        <TableRow key={index} >\r\n          <TableCell style={{ fontWeight: \"bold\", fontSize:\"11px\", color:\"#707070\" }}>{item.title}</TableCell>\r\n          <TableCell>{item.male}</TableCell>\r\n          <TableCell>{item.female}</TableCell>\r\n          <TableCell>{item.total}</TableCell>\r\n        </TableRow>\r\n      ))}\r\n    </PatientTable>\r\n  );\r\n};\r\n\r\nconst DashboardBottomBox = () => {\r\n  const history = useHistory();\r\n  const handleHospitalAnalytics = () => {\r\n    history.push(\"/hospital\");\r\n  };\r\n  return (\r\n    <HospitalTable style={{  }} header={header}>\r\n      {columnData.map((item) => {\r\n        return (\r\n          <TableRow\r\n            onClick={handleHospitalAnalytics}\r\n            style={{ cursor: \"pointer\", }}>\r\n            <TableCell>{item.state}</TableCell>\r\n            <TableCell>{item.city}</TableCell>\r\n            <TableCell>{item.name}</TableCell>\r\n            <TableCell>{item.id}</TableCell>\r\n            <TableCell>{item.subscriptionType}</TableCell>\r\n            <TableCell>{item.status}</TableCell>\r\n          </TableRow>\r\n        );\r\n      })}\r\n    </HospitalTable>\r\n  );\r\n};\r\n\r\nexport default DashboardAnalytics;\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\PatientCard.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\assests.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\ImageCrop.js",["539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\n \r\nimport {useState,useEffect,useCallback, useRef} from 'react';\r\n \r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n \r\nimport { useHistory } from \"react-router-dom\";\r\n \r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport ReactCrop from 'react-image-crop';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n \r\nconst styless = makeStyles((theme) => ({\r\n  root: {\r\n    background: '#4caf50'\r\n  }\r\n}));\r\n// Code for Image crop \r\n \r\nfunction generateDownload(canvas, crop) {\r\n  if (!crop || !canvas) {\r\n    return;\r\n  }\r\n \r\n  canvas.toBlob(\r\n    (blob) => {\r\n      const previewUrl = window.URL.createObjectURL(blob);\r\n \r\n      const anchor = document.createElement('a');\r\n      anchor.download = 'cropPreview.png';\r\n      anchor.href = URL.createObjectURL(blob);\r\n      anchor.click();\r\n \r\n      window.URL.revokeObjectURL(previewUrl);\r\n    },\r\n    'image/png',\r\n    1\r\n  );\r\n}\r\n \r\n// End of Image crop \r\n \r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n \r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n \r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n \r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n \r\nexport default function CustomizedDialogs(props) {\r\n \r\n  // More Code for Image Crop \r\n  const [upImg, setUpImg] = useState();\r\n  const imgRef = useRef(null);\r\n  const previewCanvasRef = useRef(null);\r\n  const [crop, setCrop] = useState({ unit: '%', width: 30, aspect: 16 / 9 });\r\n  const [completedCrop, setCompletedCrop] = useState(null);\r\n \r\n \r\n  const classes = styless();\r\n   \r\n \r\n  const onSelectFile = (e) => {\r\n \r\n \r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () => setUpImg(reader.result));\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n \r\n  const onLoad = useCallback((img) => {\r\n    imgRef.current = img;\r\n  }, []);\r\n \r\n  useEffect(() => {\r\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\r\n      return;\r\n    }\r\n \r\n    const image = imgRef.current;\r\n    const canvas = previewCanvasRef.current;\r\n    const crop = completedCrop;\r\n \r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext('2d');\r\n    const pixelRatio = window.devicePixelRatio;\r\n \r\n    canvas.width = crop.width * pixelRatio;\r\n    canvas.height = crop.height * pixelRatio;\r\n \r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n \r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n  }, [completedCrop]);\r\n   \r\n  // End of Crop Image code \r\n \r\n  const [open, setOpen] = React.useState(false);\r\n \r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n \r\n  const file = new File([\"foo\"], \"\", {\r\n    type: \"text/plain\",\r\n  });\r\n \r\n  const [selectedFile, setSelectedFile] = useState();\r\n    const [isFilePicked, setIsFilePicked] = useState(false);\r\n \r\n  const changeHandler = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n        //setIsSelected(true);\r\n    };\r\n    \r\n \r\n  const [fileList, setFileList] = useState();\r\n \r\n  useEffect(() => {\r\n    console.log(fileList);\r\n  });\r\n \r\n  const onDropzoneAreaChange = (files,e) => {\r\n   \r\n    setFileList(files);\r\n    //console.log(fileList);\r\n    //console.log(\"Files:\", files);\r\n \r\n  //   if (!e.target.files[0].name.match(/.(jpg|jpeg|png|gif)$/i)){\r\n  //     alert('not an image');\r\n  // }\r\n  }; \r\n \r\n  const history = useHistory();\r\n  const[filename,setFileName]= useState([]);\r\n  const[filesNa,setFilesNa]= useState([]);\r\n  const[modelImg,setModelImg] = useState('');\r\n \r\n  const handleChange = (e) =>\r\n  {\r\n      if(!e.target.files[0].name.match(/.(pdf|docx)$/i))\r\n      { \r\n          const reader = new FileReader();\r\n          reader.addEventListener('load', () => setFileName(reader.result));\r\n          reader.readAsDataURL(e.target.files[0]);\r\n          setFileName(e.target.files[0].name)\r\n          }\r\n        else\r\n        {\r\n          setFilesNa(handleClicks) // Code for Alert message show below \r\n          setFilesNa(e.target.files[0].name)\r\n        }\r\n  }\r\n   \r\n   // Code for Snackbar \r\n \r\n   const [opens, setOpens] = React.useState(false);\r\n \r\n   const handleClicks = () => {\r\n     setOpens(true);\r\n   };\r\n  \r\n   const handleCloses = (event, reason) => {\r\n     if (reason === 'clickaway') {\r\n       return;\r\n     }\r\n  \r\n     setOpens(false);\r\n   };\r\n  return (\r\n    <div>\r\n\r\n    <Button onClick={handleClickOpen} variant=\"contained\" style={{background:\"#2121a5\",color:\"white\"}} ><PublishIcon/>Choose Photo</Button>\r\n      <div>  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n       <div> {filename != '' ? <Typography><b> Image Crop </b></Typography> : <Typography><b> File Upload </b></Typography> } </div>\r\n      </DialogTitle>\r\n        \r\n          <DialogContent dividers>\r\n            <Box >\r\n            <div className=\"File\" style={{width:\"300px\"}}>\r\n              <Box align=\"center\" mt={2}>\r\n                 \r\n              {filename != '' ? <p></p> : <CloudUploadIcon color=\"disabled\" fontSiz=\"large\"  style={{width:40, height:40,}}/>  }</Box >\r\n \r\n              {filename != '' ? <Typography align=\"center\">Click and drag for cropping</Typography> : <Typography align=\"center\">{ filesNa != '' ? <p><Alert>{filesNa}</Alert> </p> : <h4>No File Selected</h4>}</Typography>  }\r\n                        \r\n            </div>\r\n  \r\n            <div className=\"Image\" style={{marginTop:\"10px\"}}>\r\n             <form>\r\n              <ReactCrop\r\n                src={filename}\r\n                onImageLoaded={onLoad}\r\n                crop={crop}\r\n                onChange={(c) => setCrop(c)}\r\n                onComplete={(c) => setCompletedCrop(c)}\r\n                style={{height:\"120px\",width:\"200px\"}}\r\n              />\r\n               <div>\r\n                <canvas\r\n                  ref={previewCanvasRef}\r\n                  // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\r\n                  style={{\r\n                    width: Math.round(completedCrop?.width ?? 0),\r\n                    height: Math.round(completedCrop?.height ?? 0)\r\n                  }}\r\n                />\r\n             </div>\r\n             \r\n              </form>\r\n            </div>  \r\n            {filename != '' ?\r\n             \r\n            <Box align=\"center\" mt={2}><Button type=\"button\" size=\"small\"  variant=\"contained\" color=\"secondary\"  disabled={!completedCrop?.width || !completedCrop?.height}onClick={() =>generateDownload(previewCanvasRef.current, completedCrop)}>Download</Button></Box>\r\n             \r\n              : <Box align=\"center\">\r\n                 <Button variant=\"contained\" style={{color:\"green\"}} size=\"small\" component=\"label\" style={{marginTop:\"10px\"}}>\r\n                   Choose File\r\n                 <input  type=\"file\" accept=\".png, .jpg, .jpeg, .pdf,.docx\"  hidden onChange={handleChange}/>\r\n                 </Button>   \r\n               </Box>\r\n                }\r\n              </Box>\r\n             \r\n        </DialogContent>\r\n      <DialogActions>\r\n        <Button autoFocus onClick={handleClose} style={{color:\"green\"}}>\r\n         Submit\r\n        </Button>\r\n        \r\n      </DialogActions>\r\n    </Dialog>\r\n    </div>\r\n    <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        \r\n        open={opens}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloses}\r\n        message=\"File Uploaded Successfully\"\r\n        ContentProps={{\r\n          classes: {\r\n            root: classes.root\r\n          }\r\n        }}\r\n        action={\r\n          <React.Fragment>\r\n            \r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloses}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Theme\\index.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\Tables\\HospitalTable\\HospitalTable.js",["556"],"import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { hospitalTableHeaderC } from '../../../Theme';\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: \"#d6d6d6\",\r\n      color: \"#000\",\r\n      textAlign:\"center\"\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: \"100%\",\r\n    height: 300,\r\n    \"& .MuiTableCell-root\": {\r\n      borderLeft: \"1px solid rgba(224, 224, 224, 1)\",\r\n      textAlign:\"center\"\r\n\r\n    },\r\n    \"& .MuiTableCell-root:first-child\": {\r\n      borderLeft: \"none\",\r\n      textAlign:\"center\"\r\n\r\n    },\r\n  },\r\n\r\n  cell: {\r\n    \"&:last-child\": {\r\n      borderBottom: \"none\",\r\n    },\r\n  },\r\n  \r\n  \r\n});\r\n\r\nconst HospitalTable = ({header, children, style}) => {\r\n \r\n    const classes = useStyles();\r\n    return <TableContainer component={Paper}  style={style} >\r\n    <Table className={classes.table} size=\"small\" stickyHeader >\r\n      <TableHead stickyHeader>\r\n        <TableRow>\r\n            {header.map(item => <StyledTableCell>{item}\r\n               </StyledTableCell> )}\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n       {children}\r\n      </TableBody>\r\n    </Table>\r\n  </TableContainer>\r\n}\r\n\r\nexport default HospitalTable;\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Screens\\Helpers\\auth.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\TotalOutstanding\\TotalOutstanding.js",["557"],"import { Box, Heading, Stack, Flex } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { outstandingBgC, outstandingTextC } from \"../../Theme\";\r\nimport { useMediaQuery } from '@chakra-ui/react'\r\n\r\nconst TotalOutstanding = ({ data, maxW, minW, size, RsSize }) => {\r\n    const [isLessThan700] = useMediaQuery('(max-width: 700px)')\r\n  \r\n  return (\r\n    \r\n    <Box\r\n      borderWidth=\"1px\"\r\n      borderRadius=\"sm\"\r\n      bg=\"#f7f7f7\"\r\n      minW={minW}\r\n      maxW={maxW}\r\n      mt=\"2\"\r\n      ml={isLessThan700 ? \"0\" : \"2\"}\r\n      mr=\"2\"\r\n      width={isLessThan700 ? '250px' : '900'}\r\n      height={isLessThan700 ? '300px' : '340px'}\r\n      // height=\"340px\"\r\n      padding=\"55px\"\r\n      boxShadow=\"-1px 4px 12px -3px rgba(0,0,0,0.28)\"\r\n      color={outstandingTextC}\r\n      >\r\n      <Stack>\r\n        <Heading\r\n          size={size ? size : \"sm\"}\r\n          textAlign=\"center\"\r\n          textTransform=\"uppercase\"\r\n          ml={isLessThan700 ? \"-30px\" : \"\"}\r\n          width={isLessThan700 ? \"200px\" : \"\"}\r\n          color={outstandingTextC}>\r\n          Total Outstanding\r\n        </Heading>\r\n        <Heading fontWeight=\"bold\" size={RsSize ? RsSize : \"sm\"} textAlign=\"center\">\r\n          Rs.{data.total.toFixed(2)}\r\n        </Heading>\r\n      </Stack>\r\n      <Flex justify=\"center\" align=\"center\"  >\r\n        <Stack width={isLessThan700 ? \"60px\" : \"\"}>\r\n          <Heading textAlign=\"center\" size={RsSize ? RsSize : \"sm\"} fontSize= {isLessThan700 ? \"17px\" : \"\"} fontWeight=\"bold\">\r\n            OPD\r\n          </Heading>\r\n          <Heading size={RsSize ? RsSize : \"sm\"} fontSize= {isLessThan700 ? \"11px\" : \"\"} fontWeight=\"bold\">\r\n            Rs.&nbsp;{data.opd}\r\n          </Heading>\r\n        </Stack>\r\n        <Box borderLeft=\"2px solid #0987A0\" height={isLessThan700 ? \"180px\" : \"200px\"} m=\"3\"></Box>\r\n        <Stack width={isLessThan700 ? \"60px\" : \"\"}>\r\n          <Heading textAlign=\"center\" size={RsSize ? RsSize : \"sm\"} fontSize= {isLessThan700 ? \"17px\" : \"\"} fontWeight=\"bold\">\r\n            IPD\r\n          </Heading>\r\n          <Heading size={RsSize ? RsSize : \"sm\"} fontWeight=\"bold\" fontSize= {isLessThan700 ? \"11px\" : \"\"}>\r\n            Rs.&nbsp;{data.ipd}\r\n          </Heading>\r\n        </Stack>\r\n        <Box borderLeft=\"2px solid #0987A0\" height={isLessThan700 ? \"180px\" : \"200px\"}  m=\"3\"></Box>\r\n        <Stack width={isLessThan700 ? \"60px\" : \"\"}>\r\n          <Heading textAlign=\"center\" size={RsSize ? RsSize : \"sm\"} fontSize= {isLessThan700 ? \"14px\" : \"\"} fontWeight=\"bold\">\r\n            OT/ICU\r\n          </Heading>\r\n          <Heading size={RsSize ? RsSize : \"sm\"} fontSize= {isLessThan700 ? \"11px\" : \"\"} fontWeight=\"bold\">\r\n            Rs.&nbsp;{data.icu}\r\n          </Heading>\r\n        </Stack>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TotalOutstanding;\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\Tables\\PatientTable\\PatientTable.js",["558"],"import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { genderTableHeaderC } from \"../../../Theme\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    // maxWidth: 400,\r\n    \"& .MuiTableCell-root\": {\r\n        borderLeft: \"1px solid rgba(224, 224, 224, 1)\"\r\n      },\r\n     \"& .MuiTableCell-root:first-child\" : {\r\n         borderLeft: \"none\"\r\n     },\r\n  },\r\n  cell: {\r\n    \"&:last-child\": {\r\n      borderBottom: \"none\"\r\n    }\r\n  },\r\n  head: {\r\n    backgroundColor: genderTableHeaderC,\r\n    color: \"#fff\",\r\n  },\r\n});\r\n\r\nconst PatientTable = ({children,header}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <TableContainer component={Paper} style={{maxHeight:\"350px\", backgroundColor:\"#f7f7f7\", boxShadow:\"-1px 4px 12px -3px rgba(0,0,0,0.28)\"}} >\r\n      <Table\r\n        stickyHeader\r\n        className={classes.table}\r\n        size=\"small\"\r\n        aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {header.map((item) => (\r\n              <TableCell className={classes.head} >{item}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {children}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default PatientTable;\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\OpdGraph\\OpdGraph.js",["559"],"import { Box } from \"@chakra-ui/layout\";\r\nimport React from \"react\";\r\nimport { Bubble } from \"react-chartjs-2\";\r\nimport { barGraphColorC } from \"../../Theme\";\r\n\r\nconst OpdGraph = ({ data,width,height }) => {\r\n  const data1 = {\r\n    labels: [\r\n      data[0].xaxis.sixDayBefore,\r\n      data[0].xaxis.fiveDayBefore,\r\n      data[0].xaxis.fourDayBefore,\r\n      data[0].xaxis.threeDayBefore,\r\n      data[0].xaxis.twoDayBefore,\r\n      data[0].xaxis.currentDate,\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: data[0].label[0],\r\n        data: data[0].yaxis,\r\n        fill: false,\r\n        borderColor: \"red\",\r\n        type: \"line\",\r\n      },\r\n      {\r\n        label: data[0].label[1],\r\n        data: data[0].yaxis,\r\n        fill: false,\r\n        backgroundColor: barGraphColorC,\r\n        type: \"bar\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    \r\n      <Bubble\r\n        data={data1}\r\n        width={width}\r\n        height={height}\r\n        options={{ maintainAspectRatio: false }}\r\n        style={{ maxWidth: 400, height: 300,backgroundColor:\"#f7f7f7\", boxShadow:\"-1px 4px 12px -3px rgba(0,0,0,0.28)\" }}\r\n      />\r\n    \r\n  );\r\n};\r\n\r\nexport default OpdGraph;\r\n","C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\PopOver-Action-Buton\\index.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Consts\\index.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\AppHeader\\Types\\index.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\button.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\AppHeader\\action.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\itextInput.js",[],"C:\\Users\\praka\\Desktop\\deploy\\master-admin-Appzo\\src\\Components\\sideBarData\\index.js",[],{"ruleId":"560","severity":1,"message":"561","line":1,"column":15,"nodeType":"562","messageId":"563","endLine":1,"endColumn":24},{"ruleId":"560","severity":1,"message":"564","line":4,"column":9,"nodeType":"562","messageId":"563","endLine":4,"endColumn":21},{"ruleId":"560","severity":1,"message":"565","line":7,"column":20,"nodeType":"562","messageId":"563","endLine":7,"endColumn":31},{"ruleId":"560","severity":1,"message":"566","line":9,"column":10,"nodeType":"562","messageId":"563","endLine":9,"endColumn":23},{"ruleId":"560","severity":1,"message":"567","line":1,"column":28,"nodeType":"562","messageId":"563","endLine":1,"endColumn":36},{"ruleId":"560","severity":1,"message":"568","line":2,"column":25,"nodeType":"562","messageId":"563","endLine":2,"endColumn":33},{"ruleId":"569","severity":1,"message":"570","line":18,"column":6,"nodeType":"571","endLine":18,"endColumn":8,"suggestions":"572"},{"ruleId":"560","severity":1,"message":"568","line":2,"column":25,"nodeType":"562","messageId":"563","endLine":2,"endColumn":33},{"ruleId":"560","severity":1,"message":"573","line":1,"column":15,"nodeType":"562","messageId":"563","endLine":1,"endColumn":19},{"ruleId":"560","severity":1,"message":"574","line":10,"column":3,"nodeType":"562","messageId":"563","endLine":10,"endColumn":9},{"ruleId":"560","severity":1,"message":"575","line":41,"column":10,"nodeType":"562","messageId":"563","endLine":41,"endColumn":23},{"ruleId":"560","severity":1,"message":"576","line":14,"column":10,"nodeType":"562","messageId":"563","endLine":14,"endColumn":19},{"ruleId":"560","severity":1,"message":"577","line":27,"column":7,"nodeType":"562","messageId":"563","endLine":27,"endColumn":17},{"ruleId":"560","severity":1,"message":"578","line":30,"column":10,"nodeType":"562","messageId":"563","endLine":30,"endColumn":18},{"ruleId":"560","severity":1,"message":"579","line":1,"column":62,"nodeType":"562","messageId":"563","endLine":1,"endColumn":67},{"ruleId":"560","severity":1,"message":"580","line":1,"column":69,"nodeType":"562","messageId":"563","endLine":1,"endColumn":74},{"ruleId":"560","severity":1,"message":"581","line":1,"column":76,"nodeType":"562","messageId":"563","endLine":1,"endColumn":78},{"ruleId":"560","severity":1,"message":"582","line":1,"column":80,"nodeType":"562","messageId":"563","endLine":1,"endColumn":82},{"ruleId":"560","severity":1,"message":"583","line":1,"column":84,"nodeType":"562","messageId":"563","endLine":1,"endColumn":89},{"ruleId":"560","severity":1,"message":"584","line":1,"column":91,"nodeType":"562","messageId":"563","endLine":1,"endColumn":93},{"ruleId":"560","severity":1,"message":"585","line":5,"column":10,"nodeType":"562","messageId":"563","endLine":5,"endColumn":23},{"ruleId":"560","severity":1,"message":"586","line":3,"column":3,"nodeType":"562","messageId":"563","endLine":3,"endColumn":12},{"ruleId":"560","severity":1,"message":"587","line":9,"column":3,"nodeType":"562","messageId":"563","endLine":9,"endColumn":8},{"ruleId":"560","severity":1,"message":"588","line":10,"column":3,"nodeType":"562","messageId":"563","endLine":10,"endColumn":10},{"ruleId":"560","severity":1,"message":"589","line":11,"column":3,"nodeType":"562","messageId":"563","endLine":11,"endColumn":9},{"ruleId":"560","severity":1,"message":"590","line":33,"column":11,"nodeType":"562","messageId":"563","endLine":33,"endColumn":23},{"ruleId":"560","severity":1,"message":"591","line":33,"column":25,"nodeType":"562","messageId":"563","endLine":33,"endColumn":31},{"ruleId":"560","severity":1,"message":"592","line":33,"column":47,"nodeType":"562","messageId":"563","endLine":33,"endColumn":60},{"ruleId":"560","severity":1,"message":"593","line":8,"column":10,"nodeType":"562","messageId":"563","endLine":8,"endColumn":16},{"ruleId":"560","severity":1,"message":"594","line":16,"column":12,"nodeType":"562","messageId":"563","endLine":16,"endColumn":19},{"ruleId":"560","severity":1,"message":"590","line":18,"column":13,"nodeType":"562","messageId":"563","endLine":18,"endColumn":25},{"ruleId":"560","severity":1,"message":"591","line":18,"column":27,"nodeType":"562","messageId":"563","endLine":18,"endColumn":33},{"ruleId":"560","severity":1,"message":"592","line":18,"column":49,"nodeType":"562","messageId":"563","endLine":18,"endColumn":62},{"ruleId":"560","severity":1,"message":"578","line":20,"column":10,"nodeType":"562","messageId":"563","endLine":20,"endColumn":18},{"ruleId":"560","severity":1,"message":"578","line":31,"column":10,"nodeType":"562","messageId":"563","endLine":31,"endColumn":18},{"ruleId":"560","severity":1,"message":"594","line":66,"column":10,"nodeType":"562","messageId":"563","endLine":66,"endColumn":17},{"ruleId":"560","severity":1,"message":"591","line":68,"column":25,"nodeType":"562","messageId":"563","endLine":68,"endColumn":31},{"ruleId":"560","severity":1,"message":"592","line":68,"column":47,"nodeType":"562","messageId":"563","endLine":68,"endColumn":60},{"ruleId":"560","severity":1,"message":"595","line":198,"column":7,"nodeType":"562","messageId":"563","endLine":198,"endColumn":23},{"ruleId":"560","severity":1,"message":"590","line":199,"column":11,"nodeType":"562","messageId":"563","endLine":199,"endColumn":23},{"ruleId":"560","severity":1,"message":"591","line":199,"column":25,"nodeType":"562","messageId":"563","endLine":199,"endColumn":31},{"ruleId":"560","severity":1,"message":"592","line":199,"column":47,"nodeType":"562","messageId":"563","endLine":199,"endColumn":60},{"ruleId":"560","severity":1,"message":"596","line":268,"column":10,"nodeType":"562","messageId":"563","endLine":268,"endColumn":15},{"ruleId":"560","severity":1,"message":"575","line":12,"column":10,"nodeType":"562","messageId":"563","endLine":12,"endColumn":23},{"ruleId":"560","severity":1,"message":"573","line":8,"column":3,"nodeType":"562","messageId":"563","endLine":8,"endColumn":7},{"ruleId":"560","severity":1,"message":"597","line":122,"column":9,"nodeType":"562","messageId":"563","endLine":122,"endColumn":14},{"ruleId":"560","severity":1,"message":"598","line":126,"column":23,"nodeType":"562","messageId":"563","endLine":126,"endColumn":37},{"ruleId":"599","severity":1,"message":"600","line":3,"column":1,"nodeType":"601","endLine":10,"endColumn":2},{"ruleId":"599","severity":1,"message":"600","line":3,"column":1,"nodeType":"601","endLine":10,"endColumn":2},{"ruleId":"560","severity":1,"message":"602","line":7,"column":10,"nodeType":"562","messageId":"563","endLine":7,"endColumn":14},{"ruleId":"560","severity":1,"message":"603","line":7,"column":16,"nodeType":"562","messageId":"563","endLine":7,"endColumn":20},{"ruleId":"560","severity":1,"message":"604","line":7,"column":22,"nodeType":"562","messageId":"563","endLine":7,"endColumn":26},{"ruleId":"560","severity":1,"message":"605","line":7,"column":28,"nodeType":"562","messageId":"563","endLine":7,"endColumn":32},{"ruleId":"560","severity":1,"message":"606","line":8,"column":10,"nodeType":"562","messageId":"563","endLine":8,"endColumn":23},{"ruleId":"560","severity":1,"message":"607","line":99,"column":10,"nodeType":"562","messageId":"563","endLine":99,"endColumn":15},{"ruleId":"560","severity":1,"message":"608","line":109,"column":9,"nodeType":"562","messageId":"563","endLine":109,"endColumn":21},{"ruleId":"560","severity":1,"message":"609","line":167,"column":9,"nodeType":"562","messageId":"563","endLine":167,"endColumn":13},{"ruleId":"560","severity":1,"message":"610","line":171,"column":10,"nodeType":"562","messageId":"563","endLine":171,"endColumn":22},{"ruleId":"560","severity":1,"message":"611","line":172,"column":12,"nodeType":"562","messageId":"563","endLine":172,"endColumn":24},{"ruleId":"560","severity":1,"message":"612","line":172,"column":26,"nodeType":"562","messageId":"563","endLine":172,"endColumn":41},{"ruleId":"560","severity":1,"message":"613","line":174,"column":9,"nodeType":"562","messageId":"563","endLine":174,"endColumn":22},{"ruleId":"560","severity":1,"message":"614","line":186,"column":9,"nodeType":"562","messageId":"563","endLine":186,"endColumn":29},{"ruleId":"560","severity":1,"message":"615","line":197,"column":9,"nodeType":"562","messageId":"563","endLine":197,"endColumn":16},{"ruleId":"560","severity":1,"message":"616","line":200,"column":9,"nodeType":"562","messageId":"563","endLine":200,"endColumn":17},{"ruleId":"560","severity":1,"message":"617","line":200,"column":18,"nodeType":"562","messageId":"563","endLine":200,"endColumn":29},{"ruleId":"618","severity":1,"message":"619","line":240,"column":24,"nodeType":"620","messageId":"621","endLine":240,"endColumn":26},{"ruleId":"618","severity":1,"message":"619","line":248,"column":25,"nodeType":"620","messageId":"621","endLine":248,"endColumn":27},{"ruleId":"618","severity":1,"message":"619","line":250,"column":25,"nodeType":"620","messageId":"621","endLine":250,"endColumn":27},{"ruleId":"618","severity":1,"message":"619","line":250,"column":140,"nodeType":"620","messageId":"621","endLine":250,"endColumn":142},{"ruleId":"618","severity":1,"message":"619","line":277,"column":23,"nodeType":"620","messageId":"621","endLine":277,"endColumn":25},{"ruleId":"622","severity":1,"message":"623","line":282,"column":101,"nodeType":"624","messageId":"625","endLine":282,"endColumn":127},{"ruleId":"560","severity":1,"message":"626","line":10,"column":10,"nodeType":"562","messageId":"563","endLine":10,"endColumn":30},{"ruleId":"560","severity":1,"message":"627","line":3,"column":10,"nodeType":"562","messageId":"563","endLine":3,"endColumn":24},{"ruleId":"560","severity":1,"message":"628","line":2,"column":10,"nodeType":"562","messageId":"563","endLine":2,"endColumn":20},{"ruleId":"560","severity":1,"message":"629","line":1,"column":10,"nodeType":"562","messageId":"563","endLine":1,"endColumn":13},{"ruleId":"560","severity":1,"message":"561","line":1,"column":15,"nodeType":"562","messageId":"563","endLine":1,"endColumn":24},{"ruleId":"560","severity":1,"message":"564","line":4,"column":9,"nodeType":"562","messageId":"563","endLine":4,"endColumn":21},{"ruleId":"560","severity":1,"message":"565","line":7,"column":20,"nodeType":"562","messageId":"563","endLine":7,"endColumn":31},{"ruleId":"560","severity":1,"message":"566","line":9,"column":10,"nodeType":"562","messageId":"563","endLine":9,"endColumn":23},{"ruleId":"560","severity":1,"message":"567","line":1,"column":28,"nodeType":"562","messageId":"563","endLine":1,"endColumn":36},{"ruleId":"560","severity":1,"message":"568","line":2,"column":25,"nodeType":"562","messageId":"563","endLine":2,"endColumn":33},{"ruleId":"569","severity":1,"message":"570","line":18,"column":6,"nodeType":"571","endLine":18,"endColumn":8,"suggestions":"630"},{"ruleId":"560","severity":1,"message":"568","line":2,"column":25,"nodeType":"562","messageId":"563","endLine":2,"endColumn":33},{"ruleId":"560","severity":1,"message":"574","line":10,"column":3,"nodeType":"562","messageId":"563","endLine":10,"endColumn":9},{"ruleId":"560","severity":1,"message":"573","line":1,"column":15,"nodeType":"562","messageId":"563","endLine":1,"endColumn":19},{"ruleId":"560","severity":1,"message":"575","line":41,"column":10,"nodeType":"562","messageId":"563","endLine":41,"endColumn":23},{"ruleId":"560","severity":1,"message":"578","line":20,"column":10,"nodeType":"562","messageId":"563","endLine":20,"endColumn":18},{"ruleId":"560","severity":1,"message":"579","line":1,"column":62,"nodeType":"562","messageId":"563","endLine":1,"endColumn":67},{"ruleId":"560","severity":1,"message":"580","line":1,"column":69,"nodeType":"562","messageId":"563","endLine":1,"endColumn":74},{"ruleId":"560","severity":1,"message":"581","line":1,"column":76,"nodeType":"562","messageId":"563","endLine":1,"endColumn":78},{"ruleId":"560","severity":1,"message":"582","line":1,"column":80,"nodeType":"562","messageId":"563","endLine":1,"endColumn":82},{"ruleId":"560","severity":1,"message":"583","line":1,"column":84,"nodeType":"562","messageId":"563","endLine":1,"endColumn":89},{"ruleId":"560","severity":1,"message":"584","line":1,"column":91,"nodeType":"562","messageId":"563","endLine":1,"endColumn":93},{"ruleId":"560","severity":1,"message":"585","line":5,"column":10,"nodeType":"562","messageId":"563","endLine":5,"endColumn":23},{"ruleId":"560","severity":1,"message":"578","line":31,"column":10,"nodeType":"562","messageId":"563","endLine":31,"endColumn":18},{"ruleId":"560","severity":1,"message":"594","line":66,"column":10,"nodeType":"562","messageId":"563","endLine":66,"endColumn":17},{"ruleId":"560","severity":1,"message":"591","line":68,"column":25,"nodeType":"562","messageId":"563","endLine":68,"endColumn":31},{"ruleId":"560","severity":1,"message":"592","line":68,"column":47,"nodeType":"562","messageId":"563","endLine":68,"endColumn":60},{"ruleId":"560","severity":1,"message":"595","line":198,"column":7,"nodeType":"562","messageId":"563","endLine":198,"endColumn":23},{"ruleId":"560","severity":1,"message":"590","line":199,"column":11,"nodeType":"562","messageId":"563","endLine":199,"endColumn":23},{"ruleId":"560","severity":1,"message":"591","line":199,"column":25,"nodeType":"562","messageId":"563","endLine":199,"endColumn":31},{"ruleId":"560","severity":1,"message":"592","line":199,"column":47,"nodeType":"562","messageId":"563","endLine":199,"endColumn":60},{"ruleId":"560","severity":1,"message":"596","line":268,"column":10,"nodeType":"562","messageId":"563","endLine":268,"endColumn":15},{"ruleId":"560","severity":1,"message":"593","line":8,"column":10,"nodeType":"562","messageId":"563","endLine":8,"endColumn":16},{"ruleId":"560","severity":1,"message":"594","line":16,"column":12,"nodeType":"562","messageId":"563","endLine":16,"endColumn":19},{"ruleId":"560","severity":1,"message":"590","line":18,"column":13,"nodeType":"562","messageId":"563","endLine":18,"endColumn":25},{"ruleId":"560","severity":1,"message":"591","line":18,"column":27,"nodeType":"562","messageId":"563","endLine":18,"endColumn":33},{"ruleId":"560","severity":1,"message":"592","line":18,"column":49,"nodeType":"562","messageId":"563","endLine":18,"endColumn":62},{"ruleId":"560","severity":1,"message":"576","line":14,"column":10,"nodeType":"562","messageId":"563","endLine":14,"endColumn":19},{"ruleId":"560","severity":1,"message":"577","line":27,"column":7,"nodeType":"562","messageId":"563","endLine":27,"endColumn":17},{"ruleId":"560","severity":1,"message":"578","line":30,"column":10,"nodeType":"562","messageId":"563","endLine":30,"endColumn":18},{"ruleId":"560","severity":1,"message":"586","line":3,"column":3,"nodeType":"562","messageId":"563","endLine":3,"endColumn":12},{"ruleId":"560","severity":1,"message":"587","line":9,"column":3,"nodeType":"562","messageId":"563","endLine":9,"endColumn":8},{"ruleId":"560","severity":1,"message":"588","line":10,"column":3,"nodeType":"562","messageId":"563","endLine":10,"endColumn":10},{"ruleId":"560","severity":1,"message":"589","line":11,"column":3,"nodeType":"562","messageId":"563","endLine":11,"endColumn":9},{"ruleId":"560","severity":1,"message":"590","line":33,"column":11,"nodeType":"562","messageId":"563","endLine":33,"endColumn":23},{"ruleId":"560","severity":1,"message":"591","line":33,"column":25,"nodeType":"562","messageId":"563","endLine":33,"endColumn":31},{"ruleId":"560","severity":1,"message":"592","line":33,"column":47,"nodeType":"562","messageId":"563","endLine":33,"endColumn":60},{"ruleId":"560","severity":1,"message":"573","line":8,"column":3,"nodeType":"562","messageId":"563","endLine":8,"endColumn":7},{"ruleId":"560","severity":1,"message":"575","line":12,"column":10,"nodeType":"562","messageId":"563","endLine":12,"endColumn":23},{"ruleId":"560","severity":1,"message":"597","line":122,"column":9,"nodeType":"562","messageId":"563","endLine":122,"endColumn":14},{"ruleId":"560","severity":1,"message":"598","line":126,"column":23,"nodeType":"562","messageId":"563","endLine":126,"endColumn":37},{"ruleId":"599","severity":1,"message":"600","line":3,"column":1,"nodeType":"601","endLine":10,"endColumn":2},{"ruleId":"599","severity":1,"message":"600","line":3,"column":1,"nodeType":"601","endLine":10,"endColumn":2},{"ruleId":"560","severity":1,"message":"602","line":7,"column":10,"nodeType":"562","messageId":"563","endLine":7,"endColumn":14},{"ruleId":"560","severity":1,"message":"603","line":7,"column":16,"nodeType":"562","messageId":"563","endLine":7,"endColumn":20},{"ruleId":"560","severity":1,"message":"604","line":7,"column":22,"nodeType":"562","messageId":"563","endLine":7,"endColumn":26},{"ruleId":"560","severity":1,"message":"605","line":7,"column":28,"nodeType":"562","messageId":"563","endLine":7,"endColumn":32},{"ruleId":"560","severity":1,"message":"606","line":8,"column":10,"nodeType":"562","messageId":"563","endLine":8,"endColumn":23},{"ruleId":"560","severity":1,"message":"607","line":99,"column":10,"nodeType":"562","messageId":"563","endLine":99,"endColumn":15},{"ruleId":"560","severity":1,"message":"608","line":109,"column":9,"nodeType":"562","messageId":"563","endLine":109,"endColumn":21},{"ruleId":"560","severity":1,"message":"609","line":167,"column":9,"nodeType":"562","messageId":"563","endLine":167,"endColumn":13},{"ruleId":"560","severity":1,"message":"610","line":171,"column":10,"nodeType":"562","messageId":"563","endLine":171,"endColumn":22},{"ruleId":"560","severity":1,"message":"611","line":172,"column":12,"nodeType":"562","messageId":"563","endLine":172,"endColumn":24},{"ruleId":"560","severity":1,"message":"612","line":172,"column":26,"nodeType":"562","messageId":"563","endLine":172,"endColumn":41},{"ruleId":"560","severity":1,"message":"613","line":174,"column":9,"nodeType":"562","messageId":"563","endLine":174,"endColumn":22},{"ruleId":"560","severity":1,"message":"614","line":186,"column":9,"nodeType":"562","messageId":"563","endLine":186,"endColumn":29},{"ruleId":"560","severity":1,"message":"615","line":197,"column":9,"nodeType":"562","messageId":"563","endLine":197,"endColumn":16},{"ruleId":"560","severity":1,"message":"616","line":200,"column":9,"nodeType":"562","messageId":"563","endLine":200,"endColumn":17},{"ruleId":"560","severity":1,"message":"617","line":200,"column":18,"nodeType":"562","messageId":"563","endLine":200,"endColumn":29},{"ruleId":"618","severity":1,"message":"619","line":240,"column":24,"nodeType":"620","messageId":"621","endLine":240,"endColumn":26},{"ruleId":"618","severity":1,"message":"619","line":248,"column":25,"nodeType":"620","messageId":"621","endLine":248,"endColumn":27},{"ruleId":"618","severity":1,"message":"619","line":250,"column":25,"nodeType":"620","messageId":"621","endLine":250,"endColumn":27},{"ruleId":"618","severity":1,"message":"619","line":250,"column":140,"nodeType":"620","messageId":"621","endLine":250,"endColumn":142},{"ruleId":"618","severity":1,"message":"619","line":277,"column":23,"nodeType":"620","messageId":"621","endLine":277,"endColumn":25},{"ruleId":"622","severity":1,"message":"623","line":282,"column":101,"nodeType":"624","messageId":"625","endLine":282,"endColumn":127},{"ruleId":"560","severity":1,"message":"626","line":10,"column":10,"nodeType":"562","messageId":"563","endLine":10,"endColumn":30},{"ruleId":"560","severity":1,"message":"627","line":3,"column":10,"nodeType":"562","messageId":"563","endLine":3,"endColumn":24},{"ruleId":"560","severity":1,"message":"628","line":2,"column":10,"nodeType":"562","messageId":"563","endLine":2,"endColumn":20},{"ruleId":"560","severity":1,"message":"629","line":1,"column":10,"nodeType":"562","messageId":"563","endLine":1,"endColumn":13},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'MessageAlert' is defined but never used.","'useDispatch' is defined but never used.","'doLoginAction' is defined but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handelRefresh'. Either include it or remove the dependency array.","ArrayExpression",["631"],"'Flex' is defined but never used.","'Spacer' is defined but never used.","'isLessThan700' is assigned a value but never used.","'useFormik' is defined but never used.","'rightTitle' is assigned a value but never used.","'tabIndex' is assigned a value but never used.","'Table' is defined but never used.","'Thead' is defined but never used.","'Tr' is defined but never used.","'Th' is defined but never used.","'Tbody' is defined but never used.","'Td' is defined but never used.","'appThemeColor' is defined but never used.","'Container' is defined but never used.","'Image' is defined but never used.","'Divider' is defined but never used.","'Center' is defined but never used.","'handleChange' is assigned a value but never used.","'values' is assigned a value but never used.","'setFieldValue' is assigned a value but never used.","'Select' is defined but never used.","'loading' is assigned a value but never used.","'MrOnboardingLink' is assigned a value but never used.","'Photo' is defined but never used.","'theme' is assigned a value but never used.","'setDrawerState' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'arr1' is defined but never used.","'arr2' is defined but never used.","'arr3' is defined but never used.","'arr4' is defined but never used.","'hospitalTable' is defined but never used.","'upImg' is assigned a value but never used.","'onSelectFile' is assigned a value but never used.","'file' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'isFilePicked' is assigned a value but never used.","'setIsFilePicked' is assigned a value but never used.","'changeHandler' is assigned a value but never used.","'onDropzoneAreaChange' is assigned a value but never used.","'history' is assigned a value but never used.","'modelImg' is assigned a value but never used.","'setModelImg' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'hospitalTableHeaderC' is defined but never used.","'outstandingBgC' is defined but never used.","'withStyles' is defined but never used.","'Box' is defined but never used.",["632"],{"desc":"633","fix":"634"},{"desc":"633","fix":"635"},"Update the dependencies array to be: [handelRefresh]",{"range":"636","text":"637"},{"range":"638","text":"637"},[461,463],"[handelRefresh]",[461,463]]