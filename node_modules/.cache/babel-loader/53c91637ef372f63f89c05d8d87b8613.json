{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\praka\\\\Desktop\\\\deploy\\\\master-admin-Appzo\\\\src\\\\Screens\\\\Login\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Heading, Stack, Button, Flex, Text, Image } from \"@chakra-ui/react\";\nimport { primaryLoginC } from \"../../Theme\";\nimport INPUT from \"../../Components/login-input\";\nimport loginImage from \"../../Images/login-screen.png\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { doloadGlobalTitle } from \"../../Components/AppHeader/action\";\nimport { doLoginAction } from \"./Action\";\nimport axios from \"../Helpers/apiClient\";\nimport { SERVER_ADDRESS } from \"../../Services/Config\";\nimport { Formik } from \"formik\";\nimport '../../../node_modules/sweetalert2/dist/sweetalert2.all';\nimport { Alert, AlertIcon, AlertTitle, AlertDescription, CloseButton } from '@chakra-ui/react';\nimport { useMediaQuery } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)');\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    h: \"100vh\",\n    w: \"100vw\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    flexFlow: isLessThan700 ? \"column\" : \"\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      w: isLessThan700 ? \"70%\" : \"30%\",\n      h: isLessThan700 ? \"40%\" : \"50%\",\n      p: \"1%\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: loginImage,\n        height: \"100%\",\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      w: isLessThan700 ? \"100%\" : \"30%\",\n      h: \"50%\",\n      p: \"1%\",\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"csXz8sehHsDMA+EqqhlBtctrVIY=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = Login;\n\nconst LoginForm = props => {\n  _s2();\n\n  const [loding, setLoding] = useState(false);\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)');\n  const [statusmessage, setstatusMessage] = useState([]);\n  const [showAlert, setShowAlert] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const forgotPassword = () => {\n    history.push(\"/forgot\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flex: 1,\n    textAlign: \"left\",\n    pt: \"50px\",\n    flexDir: \"column\",\n    p: \"5px\",\n    justifyContent: \"center\",\n    minW: \"50%\",\n    children: [showAlert ? /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      w: 400,\n      position: \"absolute\",\n      top: \"140px\",\n      children: statusmessage.map(msg => /*#__PURE__*/_jsxDEV(Alert, {\n        id: \"alertbox\",\n        children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(AlertTitle, {\n          mr: 2,\n          children: \"Please\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n          position: \"absolute\",\n          right: \"8px\",\n          top: \"8px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 20\n    }, this) : null, /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h4\",\n      size: \"xl\",\n      bgGradient: primaryLoginC,\n      bgClip: \"text\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: 16,\n      bgGradient: primaryLoginC,\n      bgClip: \"text\",\n      children: \"MASTER ADMIN CONSOLE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"ptag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: values => {\n        let url = SERVER_ADDRESS + \"/api/v1/user/login\";\n        let temp = {\n          email: values.email,\n          password: values.password\n        };\n\n        try {\n          setLoding(true);\n          axios.post(url, temp).then(async response => {\n            if (response.status === 200) {\n              await localStorage.setItem(\"userData\", JSON.stringify({\n                user: { ...response.data.data\n                }\n              }));\n              await dispatch(doLoginAction(response.data.data));\n              await dispatch(doloadGlobalTitle(\"Dashboard\"));\n              setLoding(false);\n              history.push(\"/dashboard\");\n            } else {\n              var res = response.data.data;\n              console.log(res);\n              setstatusMessage(response.data.data);\n              setShowAlert(true);\n              setTimeout(() => {\n                setShowAlert(false);\n              }, 2500);\n              setLoding(false);\n            }\n          });\n        } catch (error) {\n          console.log(\"Try and Catch Error\", error);\n        }\n      },\n      children: ({\n        handleChange,\n        handleSubmit,\n        values\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          children: [/*#__PURE__*/_jsxDEV(INPUT, {\n            label: \"USER ID\",\n            autoFocus: true,\n            onChange: handleChange,\n            value: values.email,\n            name: \"email\",\n            type: \"email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(INPUT, {\n            label: \"PASSWORD\",\n            onChange: handleChange,\n            value: values.password,\n            name: \"password\",\n            type: \"password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            textAlign: \"right\",\n            onClick: forgotPassword,\n            cursor: \"pointer\",\n            _hover: {\n              color: \"blue\"\n            },\n            children: \"forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            isLoading: loding,\n            loadingText: \"Loging in...\",\n            bgGradient: primaryLoginC,\n            type: \"submit\",\n            color: \"#fff\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(LoginForm, \"GQQiFErlB9e27ecNx5JJcnw6Xjo=\", false, function () {\n  return [useMediaQuery, useDispatch, useHistory];\n});\n\n_c2 = LoginForm;\nexport default Login;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/praka/Desktop/deploy/master-admin-Appzo/src/Screens/Login/index.js"],"names":["React","useState","Heading","Stack","Button","Flex","Text","Image","primaryLoginC","INPUT","loginImage","useDispatch","useHistory","doloadGlobalTitle","doLoginAction","axios","SERVER_ADDRESS","Formik","Alert","AlertIcon","AlertTitle","AlertDescription","CloseButton","useMediaQuery","Login","isLessThan700","LoginForm","props","loding","setLoding","statusmessage","setstatusMessage","showAlert","setShowAlert","dispatch","history","forgotPassword","push","map","msg","message","email","password","values","url","temp","post","then","response","status","localStorage","setItem","JSON","stringify","user","data","res","console","log","setTimeout","error","handleChange","handleSubmit","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Heading, Stack, Button, Flex, Text, Image } from \"@chakra-ui/react\";\r\nimport { primaryLoginC } from \"../../Theme\";\r\nimport INPUT from \"../../Components/login-input\";\r\nimport loginImage from \"../../Images/login-screen.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { doloadGlobalTitle } from \"../../Components/AppHeader/action\";\r\nimport { doLoginAction } from \"./Action\";\r\nimport axios from \"../Helpers/apiClient\";\r\nimport { SERVER_ADDRESS } from \"../../Services/Config\";\r\nimport { Formik } from \"formik\";\r\nimport '../../../node_modules/sweetalert2/dist/sweetalert2.all'\r\nimport {\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  CloseButton\r\n} from '@chakra-ui/react'\r\nimport { useMediaQuery } from '@chakra-ui/react'\r\n\r\nconst Login = () => {\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)');\r\n\r\n  return (\r\n    <Flex h=\"100vh\" w=\"100vw\" justifyContent=\"space-evenly\" alignItems=\"center\" flexFlow={isLessThan700 ? \"column\" : \"\"}>\r\n      <Flex w={isLessThan700 ? \"70%\" :\"30%\"} h={isLessThan700 ? \"40%\" :\"50%\"} p=\"1%\">\r\n        <Image src={loginImage} height={\"100%\"} width={\"100%\"} />\r\n      </Flex>\r\n      <Flex w={isLessThan700 ? \"100%\" :\"30%\"} h=\"50%\" p=\"1%\">\r\n        <LoginForm />\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nconst LoginForm = (props) => {\r\n  const [loding, setLoding] = useState(false);\r\n  const [isLessThan700] = useMediaQuery('(max-width: 700px)');\r\n\r\n  const [statusmessage, setstatusMessage] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false)\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const forgotPassword = () => {\r\n    history.push(\"/forgot\");\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      flex={1}\r\n      textAlign=\"left\"\r\n      pt=\"50px\"\r\n      flexDir=\"column\"\r\n      p=\"5px\"\r\n      justifyContent=\"center\"\r\n      minW=\"50%\">\r\n      {showAlert ? <Stack spacing={3} w={400} position=\"absolute\" top=\"140px\" >\r\n\r\n        {\r\n          statusmessage.map((msg) => (\r\n            <Alert id=\"alertbox\" >\r\n              <AlertIcon />\r\n              <AlertTitle mr={2}>Please</AlertTitle>\r\n              <AlertDescription>{msg.message}</AlertDescription>\r\n              <CloseButton position='absolute' right='8px' top='8px' />\r\n            </Alert>\r\n\r\n          ))\r\n\r\n        }\r\n      </Stack>\r\n        :\r\n        null\r\n      }\r\n\r\n      <Heading as=\"h4\" size=\"xl\" bgGradient={primaryLoginC} bgClip=\"text\">\r\n        Login\r\n      </Heading>\r\n      <Text fontSize={16}  bgGradient={primaryLoginC} bgClip=\"text\">\r\n        MASTER ADMIN CONSOLE\r\n      </Text>\r\n      <br />\r\n      <p id=\"ptag\"></p>\r\n\r\n\r\n\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n        }}\r\n        onSubmit={(values) => {\r\n          let url = SERVER_ADDRESS + \"/api/v1/user/login\";\r\n          let temp = {\r\n            email: values.email,\r\n            password: values.password,\r\n          };\r\n          \r\n          try {\r\n            setLoding(true);\r\n            axios.post(url, temp).then(async (response) => {\r\n              if (response.status === 200) {\r\n                await localStorage.setItem(\r\n                  \"userData\",\r\n                  JSON.stringify({\r\n                    user: { ...response.data.data },\r\n\r\n                  })\r\n                );\r\n                await dispatch(doLoginAction(response.data.data))\r\n                await dispatch(doloadGlobalTitle(\"Dashboard\"));\r\n                setLoding(false);\r\n\r\n                history.push(\"/dashboard\");\r\n\r\n              }\r\n              else {\r\n                var res = response.data.data\r\n                console.log(res)\r\n                setstatusMessage(response.data.data)\r\n                setShowAlert(true);\r\n                setTimeout(() => {\r\n                  setShowAlert(false)\r\n                }, 2500);\r\n                setLoding(false);\r\n                \r\n              }\r\n\r\n            });\r\n          } catch (error) {\r\n            console.log(\"Try and Catch Error\", error);\r\n          }\r\n        }}>\r\n        \r\n        {({ handleChange, handleSubmit, values }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Stack >\r\n\r\n              <INPUT\r\n                label=\"USER ID\"\r\n                autoFocus={true}\r\n                onChange={handleChange}\r\n                value={values.email}\r\n                name=\"email\"\r\n                type=\"email\"\r\n                required={true}\r\n                \r\n              />\r\n              <br />\r\n              <INPUT\r\n                label=\"PASSWORD\"\r\n                onChange={handleChange}\r\n                value={values.password}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                required={true}\r\n              />\r\n              <Text\r\n                textAlign=\"right\"\r\n                onClick={forgotPassword}\r\n                cursor=\"pointer\"\r\n                _hover={{\r\n                  color: \"blue\",\r\n                }}>\r\n                forgot password?\r\n              </Text>\r\n              <br />\r\n              <Button\r\n                isLoading={loding}\r\n                loadingText=\"Loging in...\"\r\n                bgGradient={primaryLoginC}\r\n                type=\"submit\"\r\n                color=\"#fff\"\r\n              >\r\n                Login\r\n\r\n              </Button>\r\n            </Stack>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}