{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\praka\\\\Desktop\\\\deploy\\\\master-admin-Appzo\\\\src\\\\Routes\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Redirect } from \"react-router-dom\"; //Routes Type\n\nimport PublicRoutes from \"./Public-Routes\";\nimport ProtectedRoutes from \"./Protected-Routes\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { doLoginAction } from \"../Screens/Login/Action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    handelRefresh();\n  }, []);\n\n  const handelRefresh = async () => {\n    let restoreData = await localStorage.getItem('userData');\n    let newRestoredData = JSON.parse(restoreData, '222222222');\n    console.log(newRestoredData, 'newRestoredDatanewRestoredData');\n    await dispatch(doLoginAction(newRestoredData));\n  };\n\n  const Authorization = useSelector(s => s.token);\n  console.log(Authorization, '@@@@@@@@@@@@@');\n\n  if (Authorization === null || Authorization.length === 0 || Authorization === undefined) {\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(PublicRoutes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: Authorization ? /*#__PURE__*/_jsxDEV(ProtectedRoutes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(PublicRoutes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(AppRouter, \"yxVDAgvEil5BcotWjnF3DU8pmEQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["C:/Users/praka/Desktop/deploy/master-admin-Appzo/src/Routes/index.js"],"names":["React","useEffect","useState","BrowserRouter","Redirect","PublicRoutes","ProtectedRoutes","useSelector","useDispatch","doLoginAction","AppRouter","dispatch","handelRefresh","restoreData","localStorage","getItem","newRestoredData","JSON","parse","console","log","Authorization","s","token","length","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,kBAAxC,C,CAGA;;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,yBAA9B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEtB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,aAAa;AAEd,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,aAAa,GAAG,YAAY;AAEhC,QAAIC,WAAW,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAxB;AACA,QAAIC,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWL,WAAX,EAAwB,WAAxB,CAAtB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAZ,EAA6B,gCAA7B;AACA,UAAML,QAAQ,CAACF,aAAa,CAACO,eAAD,CAAd,CAAd;AACD,GAND;;AAQA,QAAMK,aAAa,GAAGd,WAAW,CAAEe,CAAD,IAAOA,CAAC,CAACC,KAAV,CAAjC;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ,EAA2B,eAA3B;;AACA,MACEA,aAAa,KAAK,IAAlB,IACAA,aAAa,CAACG,MAAd,KAAyB,CADzB,IAEAH,aAAa,KAAKI,SAHpB,EAIE;AACA,wBACE,QAAC,aAAD;AAAA,6BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAXD,MAWO;AACL,wBACE,QAAC,aAAD;AAAA,gBACGJ,aAAa,gBAAG,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAyB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADzC;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF,CArCD;;GAAMX,S;UAEaF,W,EAeKD,W;;;KAjBlBG,S;AAuCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Redirect } from \"react-router-dom\";\r\n\r\n\r\n//Routes Type\r\nimport PublicRoutes from \"./Public-Routes\";\r\nimport ProtectedRoutes from \"./Protected-Routes\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { doLoginAction } from \"../Screens/Login/Action\";\r\n\r\nconst AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    handelRefresh()\r\n\r\n  }, [])\r\n\r\n  const handelRefresh = async () => {\r\n\r\n    let restoreData = await localStorage.getItem('userData');\r\n    let newRestoredData = JSON.parse(restoreData, '222222222');\r\n    console.log(newRestoredData, 'newRestoredDatanewRestoredData')\r\n    await dispatch(doLoginAction(newRestoredData));\r\n  }\r\n\r\n  const Authorization = useSelector((s) => s.token);\r\n  console.log(Authorization, '@@@@@@@@@@@@@')\r\n  if (\r\n    Authorization === null ||\r\n    Authorization.length === 0 ||\r\n    Authorization === undefined\r\n  ) {\r\n    return (\r\n      <BrowserRouter>\r\n        <PublicRoutes />\r\n      </BrowserRouter>\r\n\r\n    )\r\n  } else {\r\n    return (\r\n      <BrowserRouter>\r\n        {Authorization ? <ProtectedRoutes /> : <PublicRoutes />}\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AppRouter;\r\n"]},"metadata":{},"sourceType":"module"}